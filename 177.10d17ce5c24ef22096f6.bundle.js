"use strict";(self.webpackChunkJolteon=self.webpackChunkJolteon||[]).push([[177],{7458:(e,i,t)=>{t.d(i,{Z:()=>a});var n=t(8081),r=t.n(n),s=t(3645),l=t.n(s)()(r());l.push([e.id,"assetmanager .fileSystem {\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  width: 80%;\n}\nassetmanager .directory,\nassetmanager .file {\n  display: block;\n  margin: 8px;\n  padding: 8px;\n  width: 125px;\n  height: 125px;\n  border-color: var(--accent1);\n  border-style: solid;\n  border-width: 1px;\n  cursor: pointer;\n}\nassetmanager .directory .title,\nassetmanager .file .title {\n  position: absolute;\n  width: calc(100% - 16px);\n  height: 50px;\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  word-break: break-all;\n}\nassetmanager .directory:hover,\nassetmanager .file:hover {\n  box-shadow: 0px 0px 6px var(--accent1);\n}\nassetmanager .directory {\n  background-color: burlywood;\n}\nassetmanager .file {\n  position: relative;\n}\nassetmanager img {\n  width: 100%;\n  height: 100%;\n}\n",""]);const a=l},5177:(e,i,t)=>{t.r(i),t.d(i,{Dir:()=>J,default:()=>$});var n={};t.r(n),t.d(n,{default:()=>k,dependencies:()=>D,name:()=>x,register:()=>S,template:()=>v});var r=t(655),s=t(1542),l=t(3379),a=t.n(l),c=t(7795),o=t.n(c),d=t(569),p=t.n(d),h=t(3565),f=t.n(h),y=t(9216),m=t.n(y),g=t(4589),u=t.n(g),b=t(7458),w={};w.styleTagTransform=u(),w.setAttributes=f(),w.insert=p().bind(null,"head"),w.domAPI=o(),w.insertStyleElement=m(),a()(b.Z,w),b.Z&&b.Z.locals&&b.Z.locals;const x="assetmanager",v='<template as-custom-element="directory">\n  <bindable property="dir"></bindable>\n  ${dir.name}\n  \x3c!-- - ${fileType(f)} --\x3e\n</template>\n<template as-custom-element="file">\n  <bindable property="file"></bindable>\n  <bindable property="type"></bindable>\n  <bindable property="path"></bindable>\n  \n  <div class="title">${file.name}</div>\n  <template switch.bind="type">\n    <img case="image" src="${path}">\n  </template>\n\n</template>\n\n\n<h1>hi assets</h1>\n\n\x3c!-- <input type="file" onchange.trigger="e => clickSelectFiles(e)">\n\n<input type="file" id="filepicker" name="fileList" webkitdirectory multiple onchange.trigger="e => clickSelectFiles(e)"/> --\x3e\n\n<button class="btn" click.trigger="e => clickImport(e)">Piranha import</button>\n<button class="btn" click.trigger="recoverFileSystem()">Piranha reload</button>\n\n\n<h3>Current directory: <span innerhtml.bind="currentDirectory"></span></h3>\n<div class="fileSystem">\n\n  \x3c!-- <div class.bind="instanceType(file)" repeat.for="file of fileSystem" click.trigger="clickFile(file)">\n    ${file.name} - ${fileType(file)}\n  </div> --\x3e\n\n  <div class="directory" click.trigger="clickFile(null)">...</div>\n\n  \x3c!-- <div> --\x3e\n  <template repeat.for="file of getFilteredFileSystem" switch.bind="instanceType(file)">\n    <directory class.bind="instanceType(file)" case="directory" dir.bind="file" click.trigger="clickFile(file)"></directory>\n    <file class.bind="instanceType(file)" case="file" file.bind="file" type.bind="fileType(file)" path.bind="getPath(file)" click.trigger="clickFile(file)"></file>\n  </template>\n  \x3c!-- </div> --\x3e\n\n</div>\n',k=v,D=[];let F;function S(e){F||(F=s.b_N.define({name:x,template:v,dependencies:D})),e.register(F)}var P=t(9477),T=t(3867),z=t(2739);t(1932);let I=class{constructor(){this.currentDirectory="/",this.size={width:500,height:405},this.scene=new P.xsS,this.camera=new P.cPb(75,this.size.width/this.size.height,.1,1e3),this.renderer=new P.CP7,this.loader=new T.E}playThreeTest(){this.renderer.setSize(this.size.width,this.size.height),this.currentDirectory="";let e=new P.DvJ(1,1,1),i=new P.vBJ({color:65280});this.cube=new P.Kj0(e,i),this.loader.load("G:/Assets/0-blender/map6/map_6.glb",(function(e){this.scene.add(e.scene)}),void 0,(function(e){console.error(e)})),this.camera.position.z=5,this.render()}render(){requestAnimationFrame((()=>this.render())),this.animate(),this.renderer.render(this.scene,this.camera)}animate(){this.cube.rotation.x+=.01,this.cube.rotation.y+=.01}async recoverFileSystem(){let e=await(0,z.U2)("celebi:fileSystem");e?await this.verifyPermission(e)?(await this.importDirectory(e),console.log("recovered file system ")):console.log("file system access denied"):console.log("no file system in db")}async verifyPermission(e){let i={mode:"read"};return"granted"===await e.queryPermission(i)||"granted"===await e.requestPermission(i)}clickSelectFiles(e){console.log("selected files:"),console.log(e)}async clickImport(e){console.log("import "+JSON.stringify(e));let i=await window.showDirectoryPicker();await(0,z.t8)("celebi:fileSystem",i),this.importDirectory(i)}async importDirectory(e){let i=new J;i.name=e.name,i.files=await this.findFiles(e),this.fileSystem=i}async findFiles(e){var i,t,n,s;let l=[],a=[];try{for(var c,o=!0,d=(0,r.KL)(e.values());!(i=(c=await d.next()).done);){s=c.value,o=!1;try{const e=s;let i=await this.verifyPermission(e);if(console.log("permission: "+i+", "+e.name),"directory"===e.kind){let i=await this.findFiles(e),t=new J;t.name=e.name,t.files=i,l.push(t)}if("file"===e.kind){let i=e.getFile().then((e=>e));a.push(i)}}finally{o=!0}}}catch(e){t={error:e}}finally{try{o||i||!(n=d.return)||await n.call(d)}finally{if(t)throw t.error}}let p=await Promise.all(a);return l.push(...p),l}instanceType(e){return e?e.isDir?"directory":"file":"directory"}isDir(e){return e.isDir}getPath(e){return URL.createObjectURL(e)}fileType(e){return e.type.split("/")[0]}isImage(e){return e.type.includes("image")}clickFile(e){if(console.log("clickFile1: "+e+", currDir: "+this.currentDirectory),e)this.isDir(e)&&(this.currentDirectory+=e.name+"/");else{let e=this.currentDirectory.lastIndexOf("/",this.currentDirectory.lastIndexOf("/")-1);console.log("i: "+e),-1!=e&&(this.currentDirectory=this.currentDirectory.substring(0,e+1))}console.log("clickFile2: "+e+", currDir: "+this.currentDirectory)}get getFilteredFileSystem(){var e;if("/"==this.currentDirectory)return null===(e=this.fileSystem)||void 0===e?void 0:e.files;let i=this.currentDirectory.split("/").map((e=>e.trim())).filter((e=>""!=e)),t=this.fileSystem;for(let e of i)""!=e&&(t=t.files.find((i=>i.name==e)));return null==t?void 0:t.files}};I=(0,r.gn)([(0,s.MoW)(n),(0,r.w6)("design:paramtypes",[])],I);const $=I;class J{constructor(){this.isDir=!0,this.type="directory"}}}}]);