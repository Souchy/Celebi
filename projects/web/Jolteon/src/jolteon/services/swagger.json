{
  "openapi": "3.0.1",
  "info": {
    "title": "Spark",
    "version": "1.0"
  },
  "paths": {
    "/api/meta/auth/mammoth": {
      "get": {
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/meta/auth/ping": {
      "get": {
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/meta/auth/privatePing": {
      "get": {
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/meta/auth/displayName": {
      "post": {
        "tags": [
          "AuthController"
        ],
        "parameters": [
          {
            "name": "displayname",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/meta/auth/accountInfo": {
      "get": {
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/meta/auth/identitySignup": {
      "post": {
        "tags": [
          "AuthController"
        ],
        "parameters": [
          {
            "name": "displayName",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "name": "pass",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/meta/auth/identitySigninUsername": {
      "post": {
        "tags": [
          "AuthController"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pass",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/meta/auth/identitySigninEmail": {
      "post": {
        "tags": [
          "AuthController"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "name": "pass",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/meta/auth/identitySigninGoogle": {
      "post": {
        "tags": [
          "AuthController"
        ],
        "parameters": [
          {
            "name": "idToken",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/meta/auth/signinMicrosoft": {
      "post": {
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/meta/auth/identitySignout": {
      "post": {
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/meta/auth/identitySigninExternal": {
      "post": {
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/meta/auth/verify": {
      "get": {
        "tags": [
          "AuthController"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/models/creature/aggregation/list": {
      "get": {
        "tags": [
          "CreatureModelController"
        ],
        "parameters": [
          {
            "name": "list",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TextEntityAggregation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/creature/aggregation/{id}": {
      "get": {
        "tags": [
          "CreatureModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ICreatureModelView"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/creature/all": {
      "get": {
        "tags": [
          "CreatureModelController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ICreatureModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/creature/filtered": {
      "get": {
        "tags": [
          "CreatureModelController"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ICreatureModelFilterDefinition"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ICreatureModelFilterDefinition"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ICreatureModelFilterDefinition"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ICreatureModelFilterDefinition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ICreatureModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/creature/byString/{str}": {
      "get": {
        "tags": [
          "CreatureModelController"
        ],
        "parameters": [
          {
            "name": "str",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ICreatureModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/creature/{id}": {
      "get": {
        "tags": [
          "CreatureModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ICreatureModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CreatureModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatureModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatureModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatureModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatureModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplaceOneResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CreatureModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/creature/new": {
      "post": {
        "tags": [
          "CreatureModelController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ICreatureModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/creature/{id}/spells": {
      "put": {
        "tags": [
          "CreatureModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/creature/skin/all": {
      "get": {
        "tags": [
          "CreatureSkinController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ICreatureSkin"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/creature/skin/{id}": {
      "get": {
        "tags": [
          "CreatureSkinController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ICreatureSkin"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CreatureSkinController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ICreatureSkin"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ICreatureSkin"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ICreatureSkin"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ICreatureSkin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ICreatureSkin"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CreatureSkinController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/creature/skin/{ids}": {
      "get": {
        "tags": [
          "CreatureSkinController"
        ],
        "parameters": [
          {
            "name": "skinIds",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ids",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ICreatureSkin"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/creature/skin": {
      "post": {
        "tags": [
          "CreatureSkinController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ICreatureSkin"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/effect/all": {
      "get": {
        "tags": [
          "EffectPermanentController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IEffect"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/effect/{id}": {
      "get": {
        "tags": [
          "EffectPermanentController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IEffect"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EffectPermanentController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IEffect"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IEffect"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IEffect"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IEffect"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IEffect"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EffectPermanentController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/effect/new": {
      "post": {
        "tags": [
          "EffectPermanentController"
        ],
        "parameters": [
          {
            "name": "schemaName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IEffectPermanent"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/effect/copy": {
      "post": {
        "tags": [
          "EffectPermanentController"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IEffect"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IEffect"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IEffect"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IEffect"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IEffect"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/effect/{id}/schema": {
      "put": {
        "tags": [
          "EffectPermanentController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schemaName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IEffect"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/effect/{id}/addEffect/{addid}": {
      "put": {
        "tags": [
          "EffectPermanentController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addid",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IEffect"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/effect/removeEffect/{id}": {
      "put": {
        "tags": [
          "EffectPermanentController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IEffect"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/enums/charac/characteristicCategory": {
      "get": {
        "tags": [
          "EnumsController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CharacteristicCategory"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CharacteristicCategory"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CharacteristicCategory"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/enums/charac/resourceType": {
      "get": {
        "tags": [
          "EnumsController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResourceProperty"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResourceProperty"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResourceProperty"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/enums/charac/resourceProperty": {
      "get": {
        "tags": [
          "EnumsController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResourceEnum"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResourceEnum"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResourceEnum"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/enums/actorType": {
      "get": {
        "tags": [
          "EnumsController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActorType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActorType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActorType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/enums/boardTargetType": {
      "get": {
        "tags": [
          "EnumsController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoardTargetType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoardTargetType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoardTargetType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/enums/moveType": {
      "get": {
        "tags": [
          "EnumsController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MoveType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MoveType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MoveType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/enums/teamRelationType": {
      "get": {
        "tags": [
          "EnumsController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamRelationType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamRelationType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamRelationType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/enums/zoneType": {
      "get": {
        "tags": [
          "EnumsController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ZoneType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ZoneType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ZoneType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/enums/towerDirectionType": {
      "get": {
        "tags": [
          "EnumsController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TowerDirectionType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TowerDirectionType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TowerDirectionType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/enums/direction8Type": {
      "get": {
        "tags": [
          "EnumsController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Direction8Type"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Direction8Type"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Direction8Type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/enums/direction9Type": {
      "get": {
        "tags": [
          "EnumsController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Direction9Type"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Direction9Type"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Direction9Type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/enums/statusPriorityType": {
      "get": {
        "tags": [
          "EnumsController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatusPriorityType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatusPriorityType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatusPriorityType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/enums/statusMergeStrategy": {
      "get": {
        "tags": [
          "EnumsController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatusMergeStrategy"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatusMergeStrategy"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatusMergeStrategy"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/enums/statusUnbewitchStrategy": {
      "get": {
        "tags": [
          "EnumsController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatusUnbewitchStrategy"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatusUnbewitchStrategy"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatusUnbewitchStrategy"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/enums/effectType": {
      "get": {
        "tags": [
          "EnumsController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EffT"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EffT"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EffT"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/enums/triggerType": {
      "get": {
        "tags": [
          "EnumsController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TriggerType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TriggerType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TriggerType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/enums/conditionType": {
      "get": {
        "tags": [
          "EnumsController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConditionType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConditionType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConditionType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/factory/trigger": {
      "post": {
        "tags": [
          "FactoryController"
        ],
        "parameters": [
          {
            "name": "triggerTypeId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ITriggerModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/factory/condition": {
      "post": {
        "tags": [
          "FactoryController"
        ],
        "parameters": [
          {
            "name": "conditionTypeId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ICondition"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/map/all": {
      "get": {
        "tags": [
          "MapModelController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IMap"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/map/{id}": {
      "get": {
        "tags": [
          "MapModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IMap"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MapModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Map"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Map"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Map"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Map"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplaceOneResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MapModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/map/new": {
      "post": {
        "tags": [
          "MapModelController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IMap"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/properties/charac/resource": {
      "get": {
        "tags": [
          "PropertiesController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Resource"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Resource"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Resource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/properties/charac/affinity": {
      "get": {
        "tags": [
          "PropertiesController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Affinity"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Affinity"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Affinity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/properties/charac/resistance": {
      "get": {
        "tags": [
          "PropertiesController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Resistance"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Resistance"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Resistance"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/properties/charac/contextual": {
      "get": {
        "tags": [
          "PropertiesController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contextual"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contextual"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contextual"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/properties/charac/other": {
      "get": {
        "tags": [
          "PropertiesController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OtherProperty"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OtherProperty"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OtherProperty"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/properties/charac/spellmodel": {
      "get": {
        "tags": [
          "PropertiesController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpellModelProperty"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpellModelProperty"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpellModelProperty"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/properties/charac/spell": {
      "get": {
        "tags": [
          "PropertiesController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpellProperty"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpellProperty"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpellProperty"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/properties/charac/state": {
      "get": {
        "tags": [
          "PropertiesController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/State"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/State"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/State"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/properties/charac/statuscontainer": {
      "get": {
        "tags": [
          "PropertiesController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatusContainerProperty"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatusContainerProperty"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatusContainerProperty"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/properties/charac/statusinstance": {
      "get": {
        "tags": [
          "PropertiesController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatusInstanceProperty"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatusInstanceProperty"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatusInstanceProperty"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/properties/effects/schemas": {
      "get": {
        "tags": [
          "PropertiesController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SchemaDescription"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SchemaDescription"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SchemaDescription"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/properties/effects/schema/{name}": {
      "get": {
        "tags": [
          "PropertiesController"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaDescription"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaDescription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaDescription"
                }
              }
            }
          }
        }
      }
    },
    "/api/meta/shop/modelProducts": {
      "get": {
        "tags": [
          "ShopController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModelProduct"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/meta/shop/consumableProducts": {
      "get": {
        "tags": [
          "ShopController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConsumableProduct"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/meta/shop/currencyProducts": {
      "get": {
        "tags": [
          "ShopController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyProduct"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/meta/shop/buyModel": {
      "post": {
        "tags": [
          "ShopController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelProduct"
                }
              }
            }
          }
        }
      }
    },
    "/api/meta/shop/buyConsumable": {
      "post": {
        "tags": [
          "ShopController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelProduct"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/spell/all": {
      "get": {
        "tags": [
          "SpellModelController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ISpellModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/spell/aggregation/list": {
      "get": {
        "tags": [
          "SpellModelController"
        ],
        "parameters": [
          {
            "name": "list",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TextEntityAggregation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/spell/aggregation/{id}": {
      "get": {
        "tags": [
          "SpellModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISpellModelView"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/spell/list": {
      "get": {
        "tags": [
          "SpellModelController"
        ],
        "parameters": [
          {
            "name": "list",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ISpellModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/spell/filtered": {
      "get": {
        "tags": [
          "SpellModelController"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ISpellModelFilterDefinition"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ISpellModelFilterDefinition"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ISpellModelFilterDefinition"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ISpellModelFilterDefinition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ISpellModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/spell/byString/{str}": {
      "get": {
        "tags": [
          "SpellModelController"
        ],
        "parameters": [
          {
            "name": "str",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ISpellModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/spell/{id}": {
      "get": {
        "tags": [
          "SpellModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISpellModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SpellModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SpellModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpellModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SpellModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SpellModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISpellModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SpellModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/spell/new": {
      "post": {
        "tags": [
          "SpellModelController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISpellModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/spell/{id}/addEffect/{addid}": {
      "put": {
        "tags": [
          "SpellModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addid",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IEffect"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/spell/removeEffect/{id}": {
      "put": {
        "tags": [
          "SpellModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IEffect"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/spell/skin/all": {
      "get": {
        "tags": [
          "SpellSkinController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ISpellSkin"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/spell/skin/{id}": {
      "get": {
        "tags": [
          "SpellSkinController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISpellSkin"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SpellSkinController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ISpellSkin"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ISpellSkin"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ISpellSkin"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ISpellSkin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISpellSkin"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SpellSkinController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/spell/skin/{ids}": {
      "get": {
        "tags": [
          "SpellSkinController"
        ],
        "parameters": [
          {
            "name": "skinIds",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ids",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ISpellSkin"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/spell/skin": {
      "post": {
        "tags": [
          "SpellSkinController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISpellSkin"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/stats/all": {
      "get": {
        "tags": [
          "StatsModelController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IStats"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/stats/filtered": {
      "get": {
        "tags": [
          "StatsModelController"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IStatsFilterDefinition"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStatsFilterDefinition"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IStatsFilterDefinition"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IStatsFilterDefinition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IStats"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/stats/{id}": {
      "get": {
        "tags": [
          "StatsModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStats"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "StatsModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IStats"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStats"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IStats"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IStats"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStats"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StatsModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/stats/stat": {
      "post": {
        "tags": [
          "StatsModelController"
        ],
        "parameters": [
          {
            "name": "characID",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStat"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/stats/{id}/bool": {
      "put": {
        "tags": [
          "StatsModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StatBool"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatBool"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StatBool"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StatBool"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/stats/{id}/simple": {
      "put": {
        "tags": [
          "StatsModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StatSimple"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatSimple"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StatSimple"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StatSimple"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/status/all": {
      "get": {
        "tags": [
          "StatusModelController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IStatusModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/status/filtered": {
      "get": {
        "tags": [
          "StatusModelController"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IStatusModelFilterDefinition"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStatusModelFilterDefinition"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IStatusModelFilterDefinition"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IStatusModelFilterDefinition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IStatusModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/status/byString/{str}": {
      "get": {
        "tags": [
          "StatusModelController"
        ],
        "parameters": [
          {
            "name": "str",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IStatusModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/status/{id}": {
      "get": {
        "tags": [
          "StatusModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStatusModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "StatusModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StatusModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StatusModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStatusModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StatusModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/status/new": {
      "post": {
        "tags": [
          "StatusModelController"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStatusModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/status/{id}/addEffect/{addid}": {
      "put": {
        "tags": [
          "StatusModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addid",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IEffect"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/status/removeEffect/{id}": {
      "put": {
        "tags": [
          "StatusModelController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IEffect"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/string/all": {
      "get": {
        "tags": [
          "StringController"
        ],
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/I18NType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IStringEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/string/filtered": {
      "get": {
        "tags": [
          "StringController"
        ],
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/I18NType"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IStringEntityFilterDefinition"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStringEntityFilterDefinition"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IStringEntityFilterDefinition"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IStringEntityFilterDefinition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IStringEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/string/{id}": {
      "get": {
        "tags": [
          "StringController"
        ],
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/I18NType"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStringEntity"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "StringController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/I18NType"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StringEntity"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringEntity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StringEntity"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StringEntity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplaceOneResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StringController"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/string": {
      "post": {
        "tags": [
          "StringController"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StringEntity"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringEntity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StringEntity"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StringEntity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountInfo": {
        "type": "object",
        "properties": {
          "accessByIp": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IpAccess"
            },
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "integer",
            "format": "int32"
          },
          "ownedModels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActorType": {
        "enum": [
          "Source = 0",
          "Target = 1"
        ],
        "type": "string",
        "format": ""
      },
      "AddGlyph": {
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddGlyphAura": {
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddGlyphScript": {
        "type": "object",
        "properties": {
          "schemaType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AddStats": {
        "type": "object",
        "properties": {
          "stats": {
            "$ref": "#/components/schemas/IStats"
          }
        },
        "additionalProperties": false
      },
      "AddStatsPerStat": {
        "type": "object",
        "properties": {
          "statsFrom": {
            "$ref": "#/components/schemas/IStats"
          },
          "statsTo": {
            "$ref": "#/components/schemas/IStats"
          }
        },
        "additionalProperties": false
      },
      "AddStatsPercent": {
        "type": "object",
        "properties": {
          "statsPercent": {
            "$ref": "#/components/schemas/IStats"
          }
        },
        "additionalProperties": false
      },
      "AddStatsScript": {
        "type": "object",
        "properties": {
          "schemaType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AddStatusCreature": {
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddTrap": {
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Affinity": {
        "type": "object",
        "properties": {
          "element": {
            "$ref": "#/components/schemas/ElementType"
          },
          "category": {
            "$ref": "#/components/schemas/CharacteristicCategory"
          },
          "localId": {
            "type": "integer",
            "format": "int32"
          },
          "baseName": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICondition"
            },
            "nullable": true
          },
          "statValueType": {
            "$ref": "#/components/schemas/StatValueType"
          },
          "id": {
            "type": "string"
          },
          "nameModelUid": {
            "type": "string",
            "nullable": true
          },
          "enumValueConstraint": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AffinityTypes": {
        "enum": [
          "True: Affinity = {\r\n  \"element\": 4,\r\n  \"category\": 2,\r\n  \"localId\": 1,\r\n  \"baseName\": \"True\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"2001\",\r\n  \"nameModelUid\": \"CharacteristicType.Affinity.True\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Fire: Affinity = {\r\n  \"element\": 5,\r\n  \"category\": 2,\r\n  \"localId\": 2,\r\n  \"baseName\": \"Fire\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"2002\",\r\n  \"nameModelUid\": \"CharacteristicType.Affinity.Fire\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Water: Affinity = {\r\n  \"element\": 6,\r\n  \"category\": 2,\r\n  \"localId\": 3,\r\n  \"baseName\": \"Water\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"2003\",\r\n  \"nameModelUid\": \"CharacteristicType.Affinity.Water\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Earth: Affinity = {\r\n  \"element\": 7,\r\n  \"category\": 2,\r\n  \"localId\": 4,\r\n  \"baseName\": \"Earth\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"2004\",\r\n  \"nameModelUid\": \"CharacteristicType.Affinity.Earth\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Air: Affinity = {\r\n  \"element\": 8,\r\n  \"category\": 2,\r\n  \"localId\": 5,\r\n  \"baseName\": \"Air\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"2005\",\r\n  \"nameModelUid\": \"CharacteristicType.Affinity.Air\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Dark: Affinity = {\r\n  \"element\": 9,\r\n  \"category\": 2,\r\n  \"localId\": 6,\r\n  \"baseName\": \"Dark\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"2006\",\r\n  \"nameModelUid\": \"CharacteristicType.Affinity.Dark\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Light: Affinity = {\r\n  \"element\": 10,\r\n  \"category\": 2,\r\n  \"localId\": 7,\r\n  \"baseName\": \"Light\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"2007\",\r\n  \"nameModelUid\": \"CharacteristicType.Affinity.Light\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Physical: Affinity = {\r\n  \"element\": 11,\r\n  \"category\": 2,\r\n  \"localId\": 8,\r\n  \"baseName\": \"Physical\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"2008\",\r\n  \"nameModelUid\": \"CharacteristicType.Affinity.Physical\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Damage: Affinity = {\r\n  \"element\": 0,\r\n  \"category\": 2,\r\n  \"localId\": 20,\r\n  \"baseName\": \"Damage\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"2020\",\r\n  \"nameModelUid\": \"CharacteristicType.Affinity.Damage\",\r\n  \"enumValueConstraint\": null\r\n};",
          "IndirectDamage: Affinity = {\r\n  \"element\": 0,\r\n  \"category\": 2,\r\n  \"localId\": 21,\r\n  \"baseName\": \"IndirectDamage\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"2021\",\r\n  \"nameModelUid\": \"CharacteristicType.Affinity.IndirectDamage\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Heal: Affinity = {\r\n  \"element\": 0,\r\n  \"category\": 2,\r\n  \"localId\": 22,\r\n  \"baseName\": \"Heal\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"2022\",\r\n  \"nameModelUid\": \"CharacteristicType.Affinity.Heal\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Melee: Affinity = {\r\n  \"element\": 0,\r\n  \"category\": 2,\r\n  \"localId\": 23,\r\n  \"baseName\": \"Melee\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [\r\n    {\r\n      \"distance\": 2,\r\n      \"actorType\": 1,\r\n      \"comparator\": 5\r\n    }\r\n  ],\r\n  \"statValueType\": 0,\r\n  \"id\": \"2023\",\r\n  \"nameModelUid\": \"CharacteristicType.Affinity.Melee\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Distance: Affinity = {\r\n  \"element\": 0,\r\n  \"category\": 2,\r\n  \"localId\": 24,\r\n  \"baseName\": \"Distance\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [\r\n    {\r\n      \"distance\": 2,\r\n      \"actorType\": 1,\r\n      \"comparator\": 2\r\n    }\r\n  ],\r\n  \"statValueType\": 0,\r\n  \"id\": \"2024\",\r\n  \"nameModelUid\": \"CharacteristicType.Affinity.Distance\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Trap: Affinity = {\r\n  \"element\": 0,\r\n  \"category\": 2,\r\n  \"localId\": 25,\r\n  \"baseName\": \"Trap\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"2025\",\r\n  \"nameModelUid\": \"CharacteristicType.Affinity.Trap\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Glyph: Affinity = {\r\n  \"element\": 0,\r\n  \"category\": 2,\r\n  \"localId\": 26,\r\n  \"baseName\": \"Glyph\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"2026\",\r\n  \"nameModelUid\": \"CharacteristicType.Affinity.Glyph\",\r\n  \"enumValueConstraint\": null\r\n};",
          "PenetrationPercent: Affinity = {\r\n  \"element\": 0,\r\n  \"category\": 2,\r\n  \"localId\": 27,\r\n  \"baseName\": \"PenetrationPercent\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"2027\",\r\n  \"nameModelUid\": \"CharacteristicType.Affinity.PenetrationPercent\",\r\n  \"enumValueConstraint\": null\r\n};",
          "VariancePercent: Affinity = {\r\n  \"element\": 0,\r\n  \"category\": 2,\r\n  \"localId\": 28,\r\n  \"baseName\": \"VariancePercent\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"2028\",\r\n  \"nameModelUid\": \"CharacteristicType.Affinity.VariancePercent\",\r\n  \"enumValueConstraint\": null\r\n};"
        ],
        "type": "string",
        "format": ""
      },
      "AnimationsData": {
        "type": "object",
        "properties": {
          "idle": {
            "type": "string",
            "nullable": true
          },
          "run": {
            "type": "string",
            "nullable": true
          },
          "walk": {
            "type": "string",
            "nullable": true
          },
          "receiveHit": {
            "type": "string",
            "nullable": true
          },
          "victory": {
            "type": "string",
            "nullable": true
          },
          "defeat": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BoardTargetType": {
        "enum": [
          "Cell = 0",
          "Creature = 1"
        ],
        "type": "string",
        "format": ""
      },
      "BuildObstacle": {
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CastSubSpell": {
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CellMovedHistory": {
        "type": "object",
        "properties": {
          "cellID": {
            "type": "string",
            "nullable": true
          },
          "moveType": {
            "$ref": "#/components/schemas/MoveType"
          }
        },
        "additionalProperties": false
      },
      "CellType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "isWalkable": {
            "type": "boolean"
          },
          "blocksLos": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CellTypeTypes": {
        "enum": [
          "hole: CellType = {\r\n  \"id\": 0,\r\n  \"isWalkable\": false,\r\n  \"blocksLos\": false\r\n};",
          "floor: CellType = {\r\n  \"id\": 1,\r\n  \"isWalkable\": true,\r\n  \"blocksLos\": false\r\n};",
          "block: CellType = {\r\n  \"id\": 2,\r\n  \"isWalkable\": false,\r\n  \"blocksLos\": true\r\n};",
          "object: CellType = {\r\n  \"id\": 3,\r\n  \"isWalkable\": true,\r\n  \"blocksLos\": true\r\n};"
        ],
        "type": "string",
        "format": ""
      },
      "ChangeActor": {
        "type": "object",
        "additionalProperties": false
      },
      "ChangeActorScript": {
        "type": "object",
        "properties": {
          "schemaType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ChangeAnimationSet": {
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangeAppearance": {
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CharacteristicCategory": {
        "enum": [
          "Resource = 1",
          "Affinity = 2",
          "Resistance = 3",
          "State = 4",
          "Contextual = 5",
          "Other = 6",
          "Spell = 7",
          "SpellModel = 8",
          "StatusContainer = 9",
          "StatusInstance = 10"
        ],
        "type": "string",
        "format": ""
      },
      "CharacteristicIdIStatEntityDictionary": {
        "type": "object",
        "properties": {
          "entityUid": {
            "type": "string"
          },
          "dic": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/IStat"
            }
          }
        },
        "additionalProperties": false
      },
      "CharacteristicIdIStatKeyValuePair": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/IStat"
          }
        },
        "additionalProperties": false
      },
      "CharacteristicIdMathEquationEntityDictionary": {
        "type": "object",
        "properties": {
          "entityUid": {
            "type": "string"
          },
          "dic": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MathEquation"
            }
          }
        },
        "additionalProperties": false
      },
      "CharacteristicType": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/CharacteristicCategory"
          },
          "localId": {
            "type": "integer",
            "format": "int32"
          },
          "baseName": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICondition"
            },
            "nullable": true
          },
          "statValueType": {
            "$ref": "#/components/schemas/StatValueType"
          },
          "id": {
            "type": "string"
          },
          "nameModelUid": {
            "type": "string",
            "nullable": true
          },
          "enumValueConstraint": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CharacteristicTypeTypes": {
        "type": "string",
        "format": ""
      },
      "ConditionComparatorType": {
        "enum": [
          "EQ = 0",
          "NE = 1",
          "GT = 2",
          "GE = 3",
          "LT = 4",
          "LE = 5"
        ],
        "type": "string",
        "format": ""
      },
      "ConditionGroupType": {
        "enum": [
          "AND = 0",
          "OR = 1"
        ],
        "type": "string",
        "format": ""
      },
      "ConditionType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConditionTypeTypes": {
        "enum": [
          "Group: ConditionType = {\r\n  \"id\": \"0\",\r\n  \"type\": \"souchy.celebi.eevee.impl.shared.conditions.GroupCondition, Eevee, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\"\r\n};",
          "LineOfSight: ConditionType = {\r\n  \"id\": \"1\",\r\n  \"type\": \"souchy.celebi.eevee.impl.shared.conditions.other.LineOfSightCondition, Eevee, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\"\r\n};",
          "Distance: ConditionType = {\r\n  \"id\": \"2\",\r\n  \"type\": \"souchy.celebi.eevee.impl.shared.conditions.other.DistanceCondition, Eevee, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\"\r\n};",
          "CreatureModel: ConditionType = {\r\n  \"id\": \"101\",\r\n  \"type\": \"souchy.celebi.eevee.impl.shared.conditions.creature.CreatureModelCondition, Eevee, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\"\r\n};",
          "CreatureModelSame: ConditionType = {\r\n  \"id\": \"102\",\r\n  \"type\": \"souchy.celebi.eevee.impl.shared.conditions.creature.CreatureModelCondition, Eevee, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\"\r\n};",
          "CreatureCurrentTeam: ConditionType = {\r\n  \"id\": \"103\",\r\n  \"type\": \"souchy.celebi.eevee.impl.shared.conditions.creature.CreatureCurrentTeamCondition, Eevee, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\"\r\n};",
          "CreatureOriginalTeam: ConditionType = {\r\n  \"id\": \"104\",\r\n  \"type\": \"souchy.celebi.eevee.impl.shared.conditions.creature.CreatureOriginalTeamCondition, Eevee, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\"\r\n};",
          "CreatureIsSummon: ConditionType = {\r\n  \"id\": \"105\",\r\n  \"type\": \"souchy.celebi.eevee.impl.shared.conditions.creature.CreatureOriginalTeamCondition, Eevee, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\"\r\n};",
          "CreatureStats: ConditionType = {\r\n  \"id\": \"106\",\r\n  \"type\": \"souchy.celebi.eevee.impl.shared.conditions.creature.CreatureStatsCondition, Eevee, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\"\r\n};",
          "StatusModel: ConditionType = {\r\n  \"id\": \"201\",\r\n  \"type\": \"souchy.celebi.eevee.impl.shared.conditions.status.StatusModelCondition, Eevee, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\"\r\n};",
          "StatusTeam: ConditionType = {\r\n  \"id\": \"202\",\r\n  \"type\": \"souchy.celebi.eevee.impl.shared.conditions.status.StatusTeamCondition, Eevee, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\"\r\n};",
          "StatusStats: ConditionType = {\r\n  \"id\": \"203\",\r\n  \"type\": \"souchy.celebi.eevee.impl.shared.conditions.status.StatusStatsCondition, Eevee, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\"\r\n};",
          "SpellModel: ConditionType = {\r\n  \"id\": \"301\",\r\n  \"type\": \"souchy.celebi.eevee.impl.shared.conditions.spell.SpellModelCondition, Eevee, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\"\r\n};",
          "SpellStats: ConditionType = {\r\n  \"id\": \"303\",\r\n  \"type\": \"souchy.celebi.eevee.impl.shared.conditions.spell.SpellStatsCondition, Eevee, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\"\r\n};"
        ],
        "type": "string",
        "format": ""
      },
      "ConsumableDrop": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConsumableProduct": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ConsumableType"
          },
          "drops": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsumableDrop"
            },
            "nullable": true
          },
          "_id": {
            "type": "string"
          },
          "currency": {
            "type": "integer",
            "format": "int32"
          },
          "isAvailableInShop": {
            "type": "boolean"
          },
          "isAvailableInDrop": {
            "type": "boolean"
          },
          "dropWeight": {
            "type": "integer",
            "format": "int32"
          },
          "limitType": {
            "$ref": "#/components/schemas/LimitType"
          },
          "limitPerAccount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConsumableType": {
        "enum": [
          "All = 0",
          "Random = 1"
        ],
        "type": "string",
        "format": ""
      },
      "ContextType": {
        "enum": [
          "Fight = 0",
          "Round = 1",
          "Turn = 2",
          "Action = 3",
          "Effect = 4"
        ],
        "type": "string",
        "format": ""
      },
      "Contextual": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/CharacteristicCategory"
          },
          "localId": {
            "type": "integer",
            "format": "int32"
          },
          "baseName": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICondition"
            },
            "nullable": true
          },
          "statValueType": {
            "$ref": "#/components/schemas/StatValueType"
          },
          "id": {
            "type": "string"
          },
          "nameModelUid": {
            "type": "string",
            "nullable": true
          },
          "enumValueConstraint": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContextualTypes": {
        "enum": [
          "LifeUsed: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 1,\r\n  \"baseName\": \"LifeUsed\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5001\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.LifeUsed\",\r\n  \"enumValueConstraint\": null\r\n};",
          "HealReceived: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 2,\r\n  \"baseName\": \"HealReceived\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5002\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.HealReceived\",\r\n  \"enumValueConstraint\": null\r\n};",
          "HealDone: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 3,\r\n  \"baseName\": \"HealReceived\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5003\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.HealReceived\",\r\n  \"enumValueConstraint\": null\r\n};",
          "DamageTaken: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 4,\r\n  \"baseName\": \"DamageTaken\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5004\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.DamageTaken\",\r\n  \"enumValueConstraint\": null\r\n};",
          "DamageDone: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 5,\r\n  \"baseName\": \"DamageDone\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5005\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.DamageDone\",\r\n  \"enumValueConstraint\": null\r\n};",
          "ManaUsed: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 11,\r\n  \"baseName\": \"ManaUsed\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5011\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.ManaUsed\",\r\n  \"enumValueConstraint\": null\r\n};",
          "ManaGained: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 12,\r\n  \"baseName\": \"ManaGained\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5012\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.ManaGained\",\r\n  \"enumValueConstraint\": null\r\n};",
          "ManaGiven: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 13,\r\n  \"baseName\": \"ManaGained\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5013\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.ManaGained\",\r\n  \"enumValueConstraint\": null\r\n};",
          "ManaLost: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 14,\r\n  \"baseName\": \"ManaLost\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5014\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.ManaLost\",\r\n  \"enumValueConstraint\": null\r\n};",
          "ManaReduced: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 15,\r\n  \"baseName\": \"ManaReduced\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5015\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.ManaReduced\",\r\n  \"enumValueConstraint\": null\r\n};",
          "MovementUsed: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 21,\r\n  \"baseName\": \"MovementUsed\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5021\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.MovementUsed\",\r\n  \"enumValueConstraint\": null\r\n};",
          "MovementGained: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 22,\r\n  \"baseName\": \"MovementGained\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5022\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.MovementGained\",\r\n  \"enumValueConstraint\": null\r\n};",
          "MovementGiven: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 23,\r\n  \"baseName\": \"MovementGained\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5023\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.MovementGained\",\r\n  \"enumValueConstraint\": null\r\n};",
          "MovementLost: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 24,\r\n  \"baseName\": \"MovementLost\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5024\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.MovementLost\",\r\n  \"enumValueConstraint\": null\r\n};",
          "MovementReduced: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 25,\r\n  \"baseName\": \"MovementReduced\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5025\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.MovementReduced\",\r\n  \"enumValueConstraint\": null\r\n};",
          "RageUsed: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 31,\r\n  \"baseName\": \"RageUsed\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5031\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.RageUsed\",\r\n  \"enumValueConstraint\": null\r\n};",
          "RageGained: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 32,\r\n  \"baseName\": \"RageGained\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5032\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.RageGained\",\r\n  \"enumValueConstraint\": null\r\n};",
          "RageGiven: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 33,\r\n  \"baseName\": \"RageGained\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5033\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.RageGained\",\r\n  \"enumValueConstraint\": null\r\n};",
          "RageLost: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 34,\r\n  \"baseName\": \"RageLost\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5034\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.RageLost\",\r\n  \"enumValueConstraint\": null\r\n};",
          "RageReduced: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 35,\r\n  \"baseName\": \"RageReduced\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5035\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.RageReduced\",\r\n  \"enumValueConstraint\": null\r\n};",
          "CountHitsGiven: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 100,\r\n  \"baseName\": \"CountHitsGiven\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5100\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.CountHitsGiven\",\r\n  \"enumValueConstraint\": null\r\n};",
          "CountHitsTaken: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 101,\r\n  \"baseName\": \"CountHitsTaken\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5101\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.CountHitsTaken\",\r\n  \"enumValueConstraint\": null\r\n};",
          "SwapInRemainingCooldown: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 102,\r\n  \"baseName\": \"SwapInRemainingCooldown\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5102\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.SwapInRemainingCooldown\",\r\n  \"enumValueConstraint\": null\r\n};",
          "SwapOutRemainingCooldown: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 103,\r\n  \"baseName\": \"SwapOutRemainingCooldown\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5103\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.SwapOutRemainingCooldown\",\r\n  \"enumValueConstraint\": null\r\n};",
          "StartTurnPosition: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 200,\r\n  \"baseName\": \"StartTurnPosition\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5200\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.StartTurnPosition\",\r\n  \"enumValueConstraint\": null\r\n};",
          "StartFightPosition: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 201,\r\n  \"baseName\": \"StartFightPosition\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"5201\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.StartFightPosition\",\r\n  \"enumValueConstraint\": null\r\n};",
          "PreviousPositions: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 202,\r\n  \"baseName\": \"PreviousPositions\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 3,\r\n  \"id\": \"5202\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.PreviousPositions\",\r\n  \"enumValueConstraint\": null\r\n};",
          "NextPositions: Contextual = {\r\n  \"category\": 5,\r\n  \"localId\": 203,\r\n  \"baseName\": \"NextPositions\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 3,\r\n  \"id\": \"5203\",\r\n  \"nameModelUid\": \"CharacteristicType.Contextual.NextPositions\",\r\n  \"enumValueConstraint\": null\r\n};"
        ],
        "type": "string",
        "format": ""
      },
      "CreateGlyph": {
        "type": "object",
        "properties": {
          "statusStats": {
            "$ref": "#/components/schemas/StatusModelStats"
          }
        },
        "additionalProperties": false
      },
      "CreateGlyphAura": {
        "type": "object",
        "properties": {
          "statusStats": {
            "$ref": "#/components/schemas/StatusModelStats"
          }
        },
        "additionalProperties": false
      },
      "CreateStatusCreature": {
        "type": "object",
        "properties": {
          "statusStats": {
            "$ref": "#/components/schemas/StatusModelStats"
          }
        },
        "additionalProperties": false
      },
      "CreateStatusCreatureScript": {
        "type": "object",
        "properties": {
          "schemaType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CreateTrap": {
        "type": "object",
        "properties": {
          "statusStats": {
            "$ref": "#/components/schemas/StatusModelStats"
          }
        },
        "additionalProperties": false
      },
      "CreatureCurrentTeamCondition": {
        "type": "object",
        "properties": {
          "team": {
            "$ref": "#/components/schemas/TeamRelationType"
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType"
          },
          "comparator": {
            "$ref": "#/components/schemas/ConditionComparatorType"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "CreatureIsSummonCondition": {
        "type": "object",
        "properties": {
          "isSummon": {
            "type": "boolean"
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType"
          },
          "comparator": {
            "$ref": "#/components/schemas/ConditionComparatorType"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "CreatureModel": {
        "type": "object",
        "properties": {
          "entityUid": {
            "type": "string"
          },
          "modelUid": {
            "type": "string",
            "nullable": true
          },
          "nameId": {
            "type": "string"
          },
          "descriptionId": {
            "type": "string"
          },
          "statsId": {
            "type": "string"
          },
          "spellIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "statusPassiveIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "skinIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatureModelCondition": {
        "type": "object",
        "properties": {
          "sameAsSource": {
            "type": "boolean"
          },
          "creatureModelId": {
            "type": "string",
            "nullable": true
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType"
          },
          "comparator": {
            "$ref": "#/components/schemas/ConditionComparatorType"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "CreatureOriginalTeamCondition": {
        "type": "object",
        "properties": {
          "team": {
            "$ref": "#/components/schemas/TeamRelationType"
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType"
          },
          "comparator": {
            "$ref": "#/components/schemas/ConditionComparatorType"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "CreatureStats": {
        "type": "object",
        "properties": {
          "entityUid": {
            "type": "string"
          },
          "base": {
            "$ref": "#/components/schemas/CharacteristicIdIStatEntityDictionary"
          },
          "growth": {
            "$ref": "#/components/schemas/CharacteristicIdMathEquationEntityDictionary"
          }
        },
        "additionalProperties": false
      },
      "CreatureStatsCondition": {
        "type": "object",
        "properties": {
          "useNaturalStats": {
            "type": "boolean"
          },
          "compareWithTarget": {
            "type": "boolean"
          },
          "conditionStats": {
            "$ref": "#/components/schemas/IStats"
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType"
          },
          "comparator": {
            "$ref": "#/components/schemas/ConditionComparatorType"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "CurrencyProduct": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "format": "float"
          },
          "_id": {
            "type": "string"
          },
          "currency": {
            "type": "integer",
            "format": "int32"
          },
          "isAvailableInShop": {
            "type": "boolean"
          },
          "isAvailableInDrop": {
            "type": "boolean"
          },
          "dropWeight": {
            "type": "integer",
            "format": "int32"
          },
          "limitType": {
            "$ref": "#/components/schemas/LimitType"
          },
          "limitPerAccount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DamagePerContextualStat": {
        "type": "object",
        "properties": {
          "isMultiplierPercentage": {
            "type": "boolean"
          },
          "statId": {
            "type": "string"
          },
          "multiplier": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "element": {
            "$ref": "#/components/schemas/ElementType"
          },
          "baseDamage": {
            "type": "integer",
            "format": "int32"
          },
          "percentPenetration": {
            "type": "integer",
            "format": "int32"
          },
          "percentVariance": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DamagePerDynamicResourceUsedForSpell": {
        "type": "object",
        "properties": {
          "charId": {
            "type": "string"
          },
          "baseDamagePerCharacUsed": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DashAwayBy": {
        "type": "object",
        "properties": {
          "distance": {
            "type": "integer",
            "format": "int32"
          },
          "moveTargetZone": {
            "$ref": "#/components/schemas/IZone"
          }
        },
        "additionalProperties": false
      },
      "DashBy": {
        "type": "object",
        "properties": {
          "distance": {
            "type": "integer",
            "format": "int32"
          },
          "moveTargetZone": {
            "$ref": "#/components/schemas/IZone"
          }
        },
        "additionalProperties": false
      },
      "DashTo": {
        "type": "object",
        "properties": {
          "moveTargetZone": {
            "$ref": "#/components/schemas/IZone"
          }
        },
        "additionalProperties": false
      },
      "DashToScript": {
        "type": "object",
        "properties": {
          "schemaType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DeleteResult": {
        "type": "object",
        "properties": {
          "deletedCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "isAcknowledged": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DestroyObstacle": {
        "type": "object",
        "additionalProperties": false
      },
      "DigHole": {
        "type": "object",
        "additionalProperties": false
      },
      "DirectDamage": {
        "type": "object",
        "properties": {
          "element": {
            "$ref": "#/components/schemas/ElementType"
          },
          "baseDamage": {
            "type": "integer",
            "format": "int32"
          },
          "percentPenetration": {
            "type": "integer",
            "format": "int32"
          },
          "percentVariance": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DirectDamagePercentLifeMax": {
        "type": "object",
        "properties": {
          "element": {
            "$ref": "#/components/schemas/ElementType"
          },
          "baseDamage": {
            "type": "integer",
            "format": "int32"
          },
          "percentPenetration": {
            "type": "integer",
            "format": "int32"
          },
          "percentVariance": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DirectDamagePercentLifeMaxScript": {
        "type": "object",
        "properties": {
          "schemaType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DirectDamageScript": {
        "type": "object",
        "properties": {
          "schemaType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DirectDamageStealLife": {
        "type": "object",
        "properties": {
          "element": {
            "$ref": "#/components/schemas/ElementType"
          },
          "baseDamage": {
            "type": "integer",
            "format": "int32"
          },
          "percentPenetration": {
            "type": "integer",
            "format": "int32"
          },
          "percentVariance": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DirectDamageStealLifeScript": {
        "type": "object",
        "properties": {
          "schemaType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Direction8Type": {
        "enum": [
          "top = 0",
          "topright = 1",
          "right = 2",
          "bottomright = 3",
          "bottom = 4",
          "bottomleft = 5",
          "left = 6",
          "topleft = 7"
        ],
        "type": "string",
        "format": ""
      },
      "Direction9Type": {
        "enum": [
          "center = 0",
          "top = 1",
          "topright = 2",
          "right = 3",
          "bottomright = 4",
          "bottom = 5",
          "bottomleft = 6",
          "left = 7",
          "topleft = 8"
        ],
        "type": "string",
        "format": ""
      },
      "DistanceCondition": {
        "type": "object",
        "properties": {
          "distance": {
            "type": "integer",
            "format": "int32"
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType"
          },
          "comparator": {
            "$ref": "#/components/schemas/ConditionComparatorType"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "EffT": {
        "enum": [
          "AddStats = 0",
          "LearnSpell = 1",
          "ForgetSpell = 2",
          "ChangeAppearance = 3",
          "ChangeAnimationSet = 4",
          "ReduceDamageReceived = 5",
          "BuildObstacle = 10",
          "DestroyObstacle = 11",
          "DigHole = 12",
          "FillHole = 13",
          "Kill = 14",
          "Revive = 15",
          "EndTurn = 16",
          "SpawnSummon = 17",
          "UnspawnSummon = 18",
          "SpawnSummonDouble = 19",
          "SpawnSummonDoubleIllusion = 20",
          "RevealCreatureSpells = 21",
          "Walk = 22",
          "PushBy = 23",
          "PullBy = 24",
          "DashBy = 25",
          "DashAwayBy = 26",
          "PushTo = 27",
          "PullTo = 28",
          "DashTo = 29",
          "SwapSelfWith = 30",
          "SwapTargetWith = 31",
          "TeleportSelfTo = 32",
          "TeleportTargetTo = 33",
          "TeleportSelfBy = 34",
          "TeleportTargetBy = 35",
          "TeleportSymmetricallySelfOverTarget = 36",
          "TeleportSymmetricallyTargetOverSelf = 37",
          "TeleportSymmetricallyAoeOverTarget = 38",
          "TeleportToPreviousPosition = 39",
          "TeleportToStartOfTurnPosition = 40",
          "TeleportToStartOfFightPosition = 41",
          "ChangeActor = 42",
          "CastSubSpell = 43",
          "RandomChild = 44",
          "RandomPointsInZone = 45",
          "EmptyText = 46",
          "AddStatusCreature = 47",
          "AddTrap = 48",
          "AddGlyph = 49",
          "AddGlyphAura = 50",
          "CreateStatusCreature = 51",
          "CreateTrap = 52",
          "CreateGlyph = 53",
          "CreateGlyphAura = 54",
          "RemoveStatusCreature = 55",
          "RemoveTrap = 56",
          "RemoveGlyph = 57",
          "DirectDamage = 58",
          "DirectDamagePercentLifeMax = 59",
          "DirectDamageStealLife = 60",
          "IndirectDamage = 61",
          "IndirectDamagePercentLifeMax = 62",
          "RedirectDamage = 63",
          "Heal = 64",
          "HealPercentLifeMax = 65",
          "HealPercentDamageReceivedByEffect = 66",
          "HealPercentDamageDoneByEffect = 67",
          "TransferLife = 68",
          "TransferPercentLifeMax = 69",
          "DamagePerDynamicResourceUsedForSpell = 70",
          "DamagePerContextualStat = 71",
          "HealPerContextualStat = 72",
          "AddStatsPerStat = 73",
          "SwapOut = 100",
          "SwapIn = 101",
          "TakeDamageAsElement = 102",
          "AddStatsPercent = 103",
          "Chain = 104",
          "SpellAddStats = 150",
          "SpellMetaModifySpell = 200",
          "SpellMetaDeactivate = 201",
          "SpellMetaAddCosts = 202",
          "SpellMetaConvertCosts = 203",
          "SpellMetaChangeMinRangeZone = 204",
          "SpellMetaChangeMaxRangeZone = 205",
          "SpellMetaAddSpellModelStats = 206",
          "SpellMetaAddChildEffects = 207",
          "SpellMetaEffectChangeZone = 250",
          "SpellMetaEffectChangeTargetFilter = 251",
          "SpellMetaEffectAddBaseDamage = 300",
          "SpellMetaEffectAddBaseHeal = 301",
          "SpellMetaEffectChangeElement = 302",
          "SpellMetaEffectChangeVariance = 303",
          "SpellMetaEffectChangePenetration = 304"
        ],
        "type": "string",
        "format": ""
      },
      "EffectPermanent": {
        "type": "object",
        "properties": {
          "entityUid": {
            "type": "string"
          },
          "modelUid": {
            "type": "string",
            "nullable": true
          },
          "schema": {
            "$ref": "#/components/schemas/IEffectSchema"
          },
          "sourceCondition": {
            "$ref": "#/components/schemas/ICondition"
          },
          "targetFilter": {
            "$ref": "#/components/schemas/ICondition"
          },
          "targetAcquisitionZone": {
            "$ref": "#/components/schemas/IZone"
          },
          "triggers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ITriggerModel"
            },
            "nullable": true
          },
          "effectIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "ElementType": {
        "enum": [
          "None = 0",
          "Best = 1",
          "Worst = 2",
          "All = 3",
          "True = 4",
          "Fire = 5",
          "Water = 6",
          "Earth = 7",
          "Air = 8",
          "Dark = 9",
          "Light = 10",
          "Physical = 11"
        ],
        "type": "string",
        "format": ""
      },
      "EmptyText": {
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EndTurn": {
        "type": "object",
        "additionalProperties": false
      },
      "EntityStatDictionary": {
        "type": "object",
        "properties": {
          "entityUid": {
            "type": "string"
          },
          "statId": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/IStat"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FillHole": {
        "type": "object",
        "additionalProperties": false
      },
      "ForgetSpell": {
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupCondition": {
        "type": "object",
        "properties": {
          "groupType": {
            "$ref": "#/components/schemas/ConditionGroupType"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICondition"
            },
            "nullable": true
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType"
          },
          "comparator": {
            "$ref": "#/components/schemas/ConditionComparatorType"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "Heal": {
        "type": "object",
        "properties": {
          "element": {
            "$ref": "#/components/schemas/ElementType"
          },
          "baseHeal": {
            "type": "integer",
            "format": "int32"
          },
          "percentVariance": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HealPerContextualStat": {
        "type": "object",
        "properties": {
          "isMultiplierPercentage": {
            "type": "boolean"
          },
          "statId": {
            "type": "string"
          },
          "multiplier": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "element": {
            "$ref": "#/components/schemas/ElementType"
          },
          "baseHeal": {
            "type": "integer",
            "format": "int32"
          },
          "percentVariance": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HealPercentDamageDoneByEffect": {
        "type": "object",
        "properties": {
          "element": {
            "$ref": "#/components/schemas/ElementType"
          },
          "percentHeal": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HealPercentDamageDoneByEffectScript": {
        "type": "object",
        "properties": {
          "schemaType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "HealPercentDamageReceivedByEffect": {
        "type": "object",
        "properties": {
          "element": {
            "$ref": "#/components/schemas/ElementType"
          },
          "percentHeal": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HealPercentDamageReceivedByEffectScript": {
        "type": "object",
        "properties": {
          "schemaType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "HealPercentLifeMax": {
        "type": "object",
        "properties": {
          "element": {
            "$ref": "#/components/schemas/ElementType"
          },
          "percentHeal": {
            "type": "integer",
            "format": "int32"
          },
          "percentOfWhoseLife": {
            "$ref": "#/components/schemas/ActorType"
          }
        },
        "additionalProperties": false
      },
      "HealPercentLifeMaxScript": {
        "type": "object",
        "properties": {
          "schemaType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "HealScript": {
        "type": "object",
        "properties": {
          "schemaType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "I18NType": {
        "enum": [
          "fr = 0",
          "en = 1"
        ],
        "type": "string",
        "format": ""
      },
      "ICell": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CellType"
          },
          "assetOverride": {
            "$ref": "#/components/schemas/IMapAsset"
          },
          "position": {
            "$ref": "#/components/schemas/IPosition"
          },
          "statuses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "contexts": {
            "type": "object",
            "properties": {
              "Fight": {
                "$ref": "#/components/schemas/IContext"
              },
              "Round": {
                "$ref": "#/components/schemas/IContext"
              },
              "Turn": {
                "$ref": "#/components/schemas/IContext"
              },
              "Action": {
                "$ref": "#/components/schemas/IContext"
              },
              "Effect": {
                "$ref": "#/components/schemas/IContext"
              }
            },
            "additionalProperties": false,
            "nullable": true
          },
          "modelUid": {
            "type": "string",
            "nullable": true
          },
          "entityUid": {
            "type": "string"
          },
          "fightUid": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ICondition": {
        "type": "object",
        "properties": {
          "actorType": {
            "$ref": "#/components/schemas/ActorType"
          },
          "comparator": {
            "$ref": "#/components/schemas/ConditionComparatorType"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "IContext": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ContextType"
          },
          "valuesStored": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          },
          "spellsCast": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpellCastHistory"
            },
            "nullable": true
          },
          "cellsMoved": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CellMovedHistory"
            },
            "nullable": true
          },
          "compiledEffects": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/IEffectPreview"
              },
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ICreatureModel": {
        "type": "object",
        "properties": {
          "nameId": {
            "type": "string"
          },
          "descriptionId": {
            "type": "string"
          },
          "skinIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "statsId": {
            "type": "string"
          },
          "spellIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "statusPassiveIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "modelUid": {
            "type": "string",
            "nullable": true
          },
          "entityUid": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ICreatureModelFilterDefinition": {
        "type": "object",
        "additionalProperties": false
      },
      "ICreatureModelView": {
        "type": "object",
        "properties": {
          "entityUid": {
            "type": "string"
          },
          "modelUid": {
            "type": "string",
            "nullable": true
          },
          "nameId": {
            "type": "string"
          },
          "descriptionId": {
            "type": "string"
          },
          "stats": {
            "$ref": "#/components/schemas/CreatureStats"
          },
          "spells": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ISpellModelView"
            },
            "nullable": true
          },
          "statusPassives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStatusModel"
            },
            "nullable": true
          },
          "skins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICreatureSkin"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ICreatureSkin": {
        "type": "object",
        "properties": {
          "nameId": {
            "type": "string"
          },
          "descriptionId": {
            "type": "string"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "meshModel": {
            "type": "string",
            "nullable": true
          },
          "meshName": {
            "type": "string",
            "nullable": true
          },
          "animations": {
            "$ref": "#/components/schemas/AnimationsData"
          },
          "spellSkins": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "effectSkins": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "entityUid": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "IEffect": {
        "type": "object",
        "properties": {
          "schema": {
            "$ref": "#/components/schemas/IEffectSchema"
          },
          "sourceCondition": {
            "$ref": "#/components/schemas/ICondition"
          },
          "targetFilter": {
            "$ref": "#/components/schemas/ICondition"
          },
          "targetAcquisitionZone": {
            "$ref": "#/components/schemas/IZone"
          },
          "triggers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ITriggerModel"
            },
            "nullable": true
          },
          "modelUid": {
            "type": "string",
            "nullable": true
          },
          "entityUid": {
            "type": "string"
          },
          "effectIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "IEffectPermanent": {
        "type": "object",
        "properties": {
          "schema": {
            "$ref": "#/components/schemas/IEffectSchema"
          },
          "sourceCondition": {
            "$ref": "#/components/schemas/ICondition"
          },
          "targetFilter": {
            "$ref": "#/components/schemas/ICondition"
          },
          "targetAcquisitionZone": {
            "$ref": "#/components/schemas/IZone"
          },
          "triggers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ITriggerModel"
            },
            "nullable": true
          },
          "modelUid": {
            "type": "string",
            "nullable": true
          },
          "entityUid": {
            "type": "string"
          },
          "effectIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "IEffectPreview": {
        "type": "object",
        "properties": {
          "sourceID": {
            "type": "string",
            "nullable": true
          },
          "targetID": {
            "type": "string",
            "nullable": true
          },
          "spellID": {
            "type": "string",
            "nullable": true
          },
          "effectModelID": {
            "type": "string",
            "nullable": true
          },
          "effectInstanceID": {
            "type": "string",
            "nullable": true
          },
          "triggeredBefore": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IEffectPreview"
            },
            "nullable": true
          },
          "triggeredAfter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IEffectPreview"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IEffectSchema": {
        "type": "object",
        "properties": {
          "effType": {
            "$ref": "#/components/schemas/EffT"
          }
        },
        "additionalProperties": false
      },
      "IEffectView": {
        "type": "object",
        "properties": {
          "entityUid": {
            "type": "string"
          },
          "modelUid": {
            "type": "string",
            "nullable": true
          },
          "schema": {
            "$ref": "#/components/schemas/IEffectSchema"
          },
          "sourceCondition": {
            "$ref": "#/components/schemas/ICondition"
          },
          "targetFilter": {
            "$ref": "#/components/schemas/ICondition"
          },
          "targetAcquisitionZone": {
            "$ref": "#/components/schemas/IZone"
          },
          "triggers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ITriggerModel"
            },
            "nullable": true
          },
          "effectids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "effects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IEffectView"
            },
            "nullable": true
          },
          "depth": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "IMap": {
        "type": "object",
        "properties": {
          "nameId": {
            "type": "string"
          },
          "mapAsset": {
            "type": "string",
            "nullable": true
          },
          "defaultAssets": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/IMapAsset"
            },
            "nullable": true
          },
          "teamsStartPositions": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/IVector3"
              }
            },
            "nullable": true
          },
          "cells": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICell"
            },
            "nullable": true
          },
          "modelUid": {
            "type": "string",
            "nullable": true
          },
          "entityUid": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "IMapAsset": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "nullable": true
          },
          "transform": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IVector3"
            },
            "nullable": true
          },
          "color": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "IPosition": {
        "type": "object",
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "z": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ISpellModel": {
        "type": "object",
        "properties": {
          "nameId": {
            "type": "string"
          },
          "descriptionId": {
            "type": "string"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "skinIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "sourceCondition": {
            "$ref": "#/components/schemas/ICondition"
          },
          "targetFilter": {
            "$ref": "#/components/schemas/ICondition"
          },
          "statsId": {
            "type": "string"
          },
          "rangeZoneMin": {
            "$ref": "#/components/schemas/IZone"
          },
          "rangeZoneMax": {
            "$ref": "#/components/schemas/IZone"
          },
          "modelUid": {
            "type": "string",
            "nullable": true
          },
          "entityUid": {
            "type": "string"
          },
          "effectIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ISpellModelFilterDefinition": {
        "type": "object",
        "additionalProperties": false
      },
      "ISpellModelView": {
        "type": "object",
        "properties": {
          "entityUid": {
            "type": "string"
          },
          "modelUid": {
            "type": "string",
            "nullable": true
          },
          "nameId": {
            "type": "string"
          },
          "descriptionId": {
            "type": "string"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "skins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ISpellSkin"
            },
            "nullable": true
          },
          "stats": {
            "$ref": "#/components/schemas/SpellModelStats"
          },
          "sourceCondition": {
            "$ref": "#/components/schemas/ICondition"
          },
          "targetFilter": {
            "$ref": "#/components/schemas/ICondition"
          },
          "effects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IEffectView"
            },
            "nullable": true
          },
          "rangeZoneMin": {
            "$ref": "#/components/schemas/IZone"
          },
          "rangeZoneMax": {
            "$ref": "#/components/schemas/IZone"
          }
        },
        "additionalProperties": false
      },
      "ISpellSkin": {
        "type": "object",
        "properties": {
          "sourceAnimation": {
            "type": "string",
            "nullable": true
          },
          "targetAnimation": {
            "type": "string",
            "nullable": true
          },
          "behaviourScript": {
            "type": "string",
            "nullable": true
          },
          "entityUid": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "IStat": {
        "type": "object",
        "properties": {
          "statId": {
            "type": "string"
          },
          "entityUid": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "IStats": {
        "type": "object",
        "properties": {
          "base": {
            "$ref": "#/components/schemas/CharacteristicIdIStatEntityDictionary"
          },
          "growth": {
            "$ref": "#/components/schemas/CharacteristicIdMathEquationEntityDictionary"
          },
          "entityUid": {
            "type": "string"
          },
          "keys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStat"
            },
            "nullable": true,
            "readOnly": true
          },
          "pairs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CharacteristicIdIStatKeyValuePair"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IStatsFilterDefinition": {
        "type": "object",
        "additionalProperties": false
      },
      "IStatusModel": {
        "type": "object",
        "properties": {
          "nameId": {
            "type": "string"
          },
          "descriptionId": {
            "type": "string"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "skinIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "statsId": {
            "type": "string"
          },
          "priority": {
            "$ref": "#/components/schemas/StatusPriorityType"
          },
          "modelUid": {
            "type": "string",
            "nullable": true
          },
          "entityUid": {
            "type": "string"
          },
          "effectIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IStatusModelFilterDefinition": {
        "type": "object",
        "additionalProperties": false
      },
      "IStringEntity": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "modelUid": {
            "type": "string",
            "nullable": true
          },
          "entityUid": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "IStringEntityFilterDefinition": {
        "type": "object",
        "additionalProperties": false
      },
      "ITriggerModel": {
        "type": "object",
        "properties": {
          "schema": {
            "$ref": "#/components/schemas/ITriggerSchema"
          },
          "triggerOrderType": {
            "$ref": "#/components/schemas/TriggerOrderType"
          },
          "triggerZone": {
            "$ref": "#/components/schemas/IZone"
          },
          "triggererFilter": {
            "$ref": "#/components/schemas/ICondition"
          },
          "holderCondition": {
            "$ref": "#/components/schemas/ICondition"
          }
        },
        "additionalProperties": false
      },
      "ITriggerSchema": {
        "type": "object",
        "properties": {
          "triggerType": {
            "$ref": "#/components/schemas/TriggerType"
          }
        },
        "additionalProperties": false
      },
      "IVector2": {
        "type": "object",
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "z": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "IVector3": {
        "type": "object",
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "z": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "IZone": {
        "type": "object",
        "properties": {
          "zoneType": {
            "$ref": "#/components/schemas/ZoneType"
          },
          "size": {
            "$ref": "#/components/schemas/IVector3"
          },
          "negative": {
            "type": "boolean"
          },
          "worldOrigin": {
            "$ref": "#/components/schemas/ActorType"
          },
          "worldOffset": {
            "$ref": "#/components/schemas/IVector2"
          },
          "localOrigin": {
            "$ref": "#/components/schemas/Direction9Type"
          },
          "rotation": {
            "$ref": "#/components/schemas/Rotation4Type"
          },
          "canRotate": {
            "type": "boolean",
            "format": "boolean",
            "nullable": true
          },
          "sizeIndexExtendFromSource": {
            "type": "integer",
            "format": "int32"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IZone"
            },
            "nullable": true
          },
          "maxSampleCount": {
            "type": "integer",
            "format": "int32"
          },
          "samplingType": {
            "$ref": "#/components/schemas/TargetSamplingType"
          }
        },
        "additionalProperties": false
      },
      "IndirectDamage": {
        "type": "object",
        "properties": {
          "element": {
            "$ref": "#/components/schemas/ElementType"
          },
          "baseDamage": {
            "type": "integer",
            "format": "int32"
          },
          "percentPenetration": {
            "type": "integer",
            "format": "int32"
          },
          "percentVariance": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "IndirectDamagePercentLifeMax": {
        "type": "object",
        "properties": {
          "element": {
            "$ref": "#/components/schemas/ElementType"
          },
          "baseDamage": {
            "type": "integer",
            "format": "int32"
          },
          "percentPenetration": {
            "type": "integer",
            "format": "int32"
          },
          "percentVariance": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "IndirectDamagePercentLifeMaxScript": {
        "type": "object",
        "properties": {
          "schemaType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IndirectDamageScript": {
        "type": "object",
        "properties": {
          "schemaType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IpAccess": {
        "type": "object",
        "properties": {
          "ipAddress": {
            "type": "string",
            "nullable": true
          },
          "lastAccess": {
            "type": "string",
            "format": "date-time"
          },
          "verified": {
            "type": "boolean"
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Kill": {
        "type": "object",
        "additionalProperties": false
      },
      "LearnSpell": {
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LimitType": {
        "enum": [
          "Owned = 0",
          "Bought = 1"
        ],
        "type": "string",
        "format": ""
      },
      "LineOfSightCondition": {
        "type": "object",
        "properties": {
          "lineOfSight": {
            "type": "boolean"
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType"
          },
          "comparator": {
            "$ref": "#/components/schemas/ConditionComparatorType"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "Map": {
        "type": "object",
        "properties": {
          "entityUid": {
            "type": "string"
          },
          "modelUid": {
            "type": "string",
            "nullable": true
          },
          "nameId": {
            "type": "string"
          },
          "mapAsset": {
            "type": "string",
            "nullable": true
          },
          "defaultAssets": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/IMapAsset"
            },
            "nullable": true
          },
          "teamsStartPositions": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/IVector3"
              }
            },
            "nullable": true
          },
          "cells": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICell"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MathEquation": {
        "type": "object",
        "properties": {
          "functions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MathFunction"
            }
          }
        },
        "additionalProperties": false
      },
      "MathFunction": {
        "type": "object",
        "properties": {
          "xFromIncluded": {
            "type": "integer",
            "format": "int32"
          },
          "xToExcluded": {
            "type": "integer",
            "format": "int32"
          },
          "slopes": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          }
        },
        "additionalProperties": false
      },
      "ModelProduct": {
        "type": "object",
        "properties": {
          "modelID": {
            "type": "string",
            "nullable": true
          },
          "_id": {
            "type": "string"
          },
          "currency": {
            "type": "integer",
            "format": "int32"
          },
          "isAvailableInShop": {
            "type": "boolean"
          },
          "isAvailableInDrop": {
            "type": "boolean"
          },
          "dropWeight": {
            "type": "integer",
            "format": "int32"
          },
          "limitType": {
            "$ref": "#/components/schemas/LimitType"
          },
          "limitPerAccount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MoveType": {
        "enum": [
          "Walk = 0",
          "Translate = 1",
          "Teleport = 2",
          "Carry = 3",
          "Throw = 4"
        ],
        "type": "string",
        "format": ""
      },
      "OtherProperty": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/CharacteristicCategory"
          },
          "localId": {
            "type": "integer",
            "format": "int32"
          },
          "baseName": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICondition"
            },
            "nullable": true
          },
          "statValueType": {
            "$ref": "#/components/schemas/StatValueType"
          },
          "id": {
            "type": "string"
          },
          "nameModelUid": {
            "type": "string",
            "nullable": true
          },
          "enumValueConstraint": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OtherPropertyTypes": {
        "enum": [
          "Range: OtherProperty = {\r\n  \"category\": 6,\r\n  \"localId\": 0,\r\n  \"baseName\": \"Range\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"6000\",\r\n  \"nameModelUid\": \"CharacteristicType.Other.Range\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Speed: OtherProperty = {\r\n  \"category\": 6,\r\n  \"localId\": 1,\r\n  \"baseName\": \"Speed\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"6001\",\r\n  \"nameModelUid\": \"CharacteristicType.Other.Speed\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Erosion: OtherProperty = {\r\n  \"category\": 6,\r\n  \"localId\": 2,\r\n  \"baseName\": \"Erosion\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"6002\",\r\n  \"nameModelUid\": \"CharacteristicType.Other.Erosion\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Echo: OtherProperty = {\r\n  \"category\": 6,\r\n  \"localId\": 3,\r\n  \"baseName\": \"Echo\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"6003\",\r\n  \"nameModelUid\": \"CharacteristicType.Other.Echo\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Lock: OtherProperty = {\r\n  \"category\": 6,\r\n  \"localId\": 4,\r\n  \"baseName\": \"Lock\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"6004\",\r\n  \"nameModelUid\": \"CharacteristicType.Other.Lock\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Evasion: OtherProperty = {\r\n  \"category\": 6,\r\n  \"localId\": 5,\r\n  \"baseName\": \"Evasion\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"6005\",\r\n  \"nameModelUid\": \"CharacteristicType.Other.Evasion\",\r\n  \"enumValueConstraint\": null\r\n};",
          "MindPower: OtherProperty = {\r\n  \"category\": 6,\r\n  \"localId\": 6,\r\n  \"baseName\": \"MindPower\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"6006\",\r\n  \"nameModelUid\": \"CharacteristicType.Other.MindPower\",\r\n  \"enumValueConstraint\": null\r\n};",
          "SwapInBaseCooldown: OtherProperty = {\r\n  \"category\": 6,\r\n  \"localId\": 7,\r\n  \"baseName\": \"SwapInBaseCooldown\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"6007\",\r\n  \"nameModelUid\": \"CharacteristicType.Other.SwapInBaseCooldown\",\r\n  \"enumValueConstraint\": null\r\n};",
          "SwapOutBaseCooldown: OtherProperty = {\r\n  \"category\": 6,\r\n  \"localId\": 8,\r\n  \"baseName\": \"SwapOutBaseCooldown\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"6008\",\r\n  \"nameModelUid\": \"CharacteristicType.Other.SwapOutBaseCooldown\",\r\n  \"enumValueConstraint\": null\r\n};"
        ],
        "type": "string",
        "format": ""
      },
      "PullBy": {
        "type": "object",
        "properties": {
          "distance": {
            "type": "integer",
            "format": "int32"
          },
          "moveTargetZone": {
            "$ref": "#/components/schemas/IZone"
          }
        },
        "additionalProperties": false
      },
      "PullTo": {
        "type": "object",
        "properties": {
          "moveTargetZone": {
            "$ref": "#/components/schemas/IZone"
          }
        },
        "additionalProperties": false
      },
      "PushBy": {
        "type": "object",
        "properties": {
          "distance": {
            "type": "integer",
            "format": "int32"
          },
          "moveTargetZone": {
            "$ref": "#/components/schemas/IZone"
          }
        },
        "additionalProperties": false
      },
      "PushByScript": {
        "type": "object",
        "properties": {
          "schemaType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PushTo": {
        "type": "object",
        "properties": {
          "moveTargetZone": {
            "$ref": "#/components/schemas/IZone"
          }
        },
        "additionalProperties": false
      },
      "RandomChild": {
        "type": "object",
        "additionalProperties": false
      },
      "RandomPointsInZone": {
        "type": "object",
        "properties": {
          "maximumPointsCount": {
            "type": "integer",
            "format": "int32"
          },
          "percentChancePerPoint": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RedirectDamage": {
        "type": "object",
        "properties": {
          "percentRedirect": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReduceDamageReceived": {
        "type": "object",
        "properties": {
          "reduction": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RemoveGlyph": {
        "type": "object",
        "properties": {
          "statusFilter": {
            "$ref": "#/components/schemas/ICondition"
          },
          "durationToRemove": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RemoveStatusCreature": {
        "type": "object",
        "properties": {
          "statusFilter": {
            "$ref": "#/components/schemas/ICondition"
          },
          "durationToRemove": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RemoveTrap": {
        "type": "object",
        "properties": {
          "statusFilter": {
            "$ref": "#/components/schemas/ICondition"
          },
          "durationToRemove": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReplaceOneResult": {
        "type": "object",
        "properties": {
          "isAcknowledged": {
            "type": "boolean",
            "readOnly": true
          },
          "isModifiedCountAvailable": {
            "type": "boolean",
            "readOnly": true
          },
          "matchedCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "modifiedCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "upsertedId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Resistance": {
        "type": "object",
        "properties": {
          "element": {
            "$ref": "#/components/schemas/ElementType"
          },
          "category": {
            "$ref": "#/components/schemas/CharacteristicCategory"
          },
          "localId": {
            "type": "integer",
            "format": "int32"
          },
          "baseName": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICondition"
            },
            "nullable": true
          },
          "statValueType": {
            "$ref": "#/components/schemas/StatValueType"
          },
          "id": {
            "type": "string"
          },
          "nameModelUid": {
            "type": "string",
            "nullable": true
          },
          "enumValueConstraint": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResistanceTypes": {
        "enum": [
          "True: Resistance = {\r\n  \"element\": 4,\r\n  \"category\": 3,\r\n  \"localId\": 1,\r\n  \"baseName\": \"True\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"3001\",\r\n  \"nameModelUid\": \"CharacteristicType.Resistance.True\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Fire: Resistance = {\r\n  \"element\": 5,\r\n  \"category\": 3,\r\n  \"localId\": 2,\r\n  \"baseName\": \"Fire\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"3002\",\r\n  \"nameModelUid\": \"CharacteristicType.Resistance.Fire\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Water: Resistance = {\r\n  \"element\": 6,\r\n  \"category\": 3,\r\n  \"localId\": 3,\r\n  \"baseName\": \"Water\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"3003\",\r\n  \"nameModelUid\": \"CharacteristicType.Resistance.Water\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Earth: Resistance = {\r\n  \"element\": 7,\r\n  \"category\": 3,\r\n  \"localId\": 4,\r\n  \"baseName\": \"Earth\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"3004\",\r\n  \"nameModelUid\": \"CharacteristicType.Resistance.Earth\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Air: Resistance = {\r\n  \"element\": 8,\r\n  \"category\": 3,\r\n  \"localId\": 5,\r\n  \"baseName\": \"Air\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"3005\",\r\n  \"nameModelUid\": \"CharacteristicType.Resistance.Air\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Dark: Resistance = {\r\n  \"element\": 9,\r\n  \"category\": 3,\r\n  \"localId\": 6,\r\n  \"baseName\": \"Dark\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"3006\",\r\n  \"nameModelUid\": \"CharacteristicType.Resistance.Dark\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Light: Resistance = {\r\n  \"element\": 10,\r\n  \"category\": 3,\r\n  \"localId\": 7,\r\n  \"baseName\": \"Light\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"3007\",\r\n  \"nameModelUid\": \"CharacteristicType.Resistance.Light\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Damage: Resistance = {\r\n  \"element\": 0,\r\n  \"category\": 3,\r\n  \"localId\": 20,\r\n  \"baseName\": \"Damage\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"3020\",\r\n  \"nameModelUid\": \"CharacteristicType.Resistance.Damage\",\r\n  \"enumValueConstraint\": null\r\n};",
          "IndirectDamage: Resistance = {\r\n  \"element\": 0,\r\n  \"category\": 3,\r\n  \"localId\": 21,\r\n  \"baseName\": \"IndirectDamage\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"3021\",\r\n  \"nameModelUid\": \"CharacteristicType.Resistance.IndirectDamage\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Heal: Resistance = {\r\n  \"element\": 0,\r\n  \"category\": 3,\r\n  \"localId\": 22,\r\n  \"baseName\": \"Heal\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"3022\",\r\n  \"nameModelUid\": \"CharacteristicType.Resistance.Heal\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Melee: Resistance = {\r\n  \"element\": 0,\r\n  \"category\": 3,\r\n  \"localId\": 23,\r\n  \"baseName\": \"Melee\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [\r\n    {\r\n      \"distance\": 2,\r\n      \"actorType\": 1,\r\n      \"comparator\": 5\r\n    }\r\n  ],\r\n  \"statValueType\": 0,\r\n  \"id\": \"3023\",\r\n  \"nameModelUid\": \"CharacteristicType.Resistance.Melee\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Distance: Resistance = {\r\n  \"element\": 0,\r\n  \"category\": 3,\r\n  \"localId\": 24,\r\n  \"baseName\": \"Distance\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [\r\n    {\r\n      \"distance\": 2,\r\n      \"actorType\": 1,\r\n      \"comparator\": 2\r\n    }\r\n  ],\r\n  \"statValueType\": 0,\r\n  \"id\": \"3024\",\r\n  \"nameModelUid\": \"CharacteristicType.Resistance.Distance\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Trap: Resistance = {\r\n  \"element\": 0,\r\n  \"category\": 3,\r\n  \"localId\": 25,\r\n  \"baseName\": \"Trap\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"3025\",\r\n  \"nameModelUid\": \"CharacteristicType.Resistance.Trap\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Glyph: Resistance = {\r\n  \"element\": 0,\r\n  \"category\": 3,\r\n  \"localId\": 26,\r\n  \"baseName\": \"Glyph\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"3026\",\r\n  \"nameModelUid\": \"CharacteristicType.Resistance.Glyph\",\r\n  \"enumValueConstraint\": null\r\n};"
        ],
        "type": "string",
        "format": ""
      },
      "Resource": {
        "type": "object",
        "properties": {
          "resType": {
            "$ref": "#/components/schemas/ResourceEnum"
          },
          "resProp": {
            "$ref": "#/components/schemas/ResourceProperty"
          },
          "category": {
            "$ref": "#/components/schemas/CharacteristicCategory"
          },
          "localId": {
            "type": "integer",
            "format": "int32"
          },
          "baseName": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICondition"
            },
            "nullable": true
          },
          "statValueType": {
            "$ref": "#/components/schemas/StatValueType"
          },
          "id": {
            "type": "string"
          },
          "nameModelUid": {
            "type": "string",
            "nullable": true
          },
          "enumValueConstraint": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceEnum": {
        "enum": [
          "Life = 0",
          "Mana = 1",
          "Movement = 2",
          "Summon = 3",
          "Rage = 4",
          "Shield = 5"
        ],
        "type": "string",
        "format": ""
      },
      "ResourceProperty": {
        "enum": [
          "InitialMax = 0",
          "Current = 1",
          "Max = 2",
          "Missing = 3",
          "Regen = 4",
          "Percent = 5",
          "MissingPercent = 6"
        ],
        "type": "string",
        "format": ""
      },
      "ResourceTypes": {
        "enum": [
          "LifeInitialMax: Resource = {\r\n  \"resType\": 0,\r\n  \"resProp\": 0,\r\n  \"category\": 1,\r\n  \"localId\": 0,\r\n  \"baseName\": \"LifeInitialMax\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1000\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.LifeInitialMax\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Life: Resource = {\r\n  \"resType\": 0,\r\n  \"resProp\": 1,\r\n  \"category\": 1,\r\n  \"localId\": 1,\r\n  \"baseName\": \"Life\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1001\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.Life\",\r\n  \"enumValueConstraint\": null\r\n};",
          "LifeMax: Resource = {\r\n  \"resType\": 0,\r\n  \"resProp\": 2,\r\n  \"category\": 1,\r\n  \"localId\": 2,\r\n  \"baseName\": \"LifeMax\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1002\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.LifeMax\",\r\n  \"enumValueConstraint\": null\r\n};",
          "LifeRegen: Resource = {\r\n  \"resType\": 0,\r\n  \"resProp\": 4,\r\n  \"category\": 1,\r\n  \"localId\": 3,\r\n  \"baseName\": \"LifeRegen\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1003\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.LifeRegen\",\r\n  \"enumValueConstraint\": null\r\n};",
          "LifeMissing: Resource = {\r\n  \"resType\": 0,\r\n  \"resProp\": 3,\r\n  \"category\": 1,\r\n  \"localId\": 4,\r\n  \"baseName\": \"LifeMissing\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1004\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.LifeMissing\",\r\n  \"enumValueConstraint\": null\r\n};",
          "LifePercent: Resource = {\r\n  \"resType\": 0,\r\n  \"resProp\": 5,\r\n  \"category\": 1,\r\n  \"localId\": 5,\r\n  \"baseName\": \"LifePercent\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1005\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.LifePercent\",\r\n  \"enumValueConstraint\": null\r\n};",
          "LifeMissingPercent: Resource = {\r\n  \"resType\": 0,\r\n  \"resProp\": 6,\r\n  \"category\": 1,\r\n  \"localId\": 6,\r\n  \"baseName\": \"LifeMissingPercent\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1006\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.LifeMissingPercent\",\r\n  \"enumValueConstraint\": null\r\n};",
          "ManaInitialMax: Resource = {\r\n  \"resType\": 1,\r\n  \"resProp\": 0,\r\n  \"category\": 1,\r\n  \"localId\": 7,\r\n  \"baseName\": \"ManaInitialMax\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1007\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.ManaInitialMax\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Mana: Resource = {\r\n  \"resType\": 1,\r\n  \"resProp\": 1,\r\n  \"category\": 1,\r\n  \"localId\": 8,\r\n  \"baseName\": \"Mana\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1008\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.Mana\",\r\n  \"enumValueConstraint\": null\r\n};",
          "ManaMax: Resource = {\r\n  \"resType\": 1,\r\n  \"resProp\": 2,\r\n  \"category\": 1,\r\n  \"localId\": 9,\r\n  \"baseName\": \"ManaMax\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1009\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.ManaMax\",\r\n  \"enumValueConstraint\": null\r\n};",
          "ManaRegen: Resource = {\r\n  \"resType\": 1,\r\n  \"resProp\": 4,\r\n  \"category\": 1,\r\n  \"localId\": 10,\r\n  \"baseName\": \"ManaRegen\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1010\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.ManaRegen\",\r\n  \"enumValueConstraint\": null\r\n};",
          "ManaMissing: Resource = {\r\n  \"resType\": 1,\r\n  \"resProp\": 3,\r\n  \"category\": 1,\r\n  \"localId\": 11,\r\n  \"baseName\": \"ManaMissing\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1011\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.ManaMissing\",\r\n  \"enumValueConstraint\": null\r\n};",
          "ManaPercent: Resource = {\r\n  \"resType\": 1,\r\n  \"resProp\": 5,\r\n  \"category\": 1,\r\n  \"localId\": 12,\r\n  \"baseName\": \"ManaPercent\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1012\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.ManaPercent\",\r\n  \"enumValueConstraint\": null\r\n};",
          "ManaMissingPercent: Resource = {\r\n  \"resType\": 1,\r\n  \"resProp\": 6,\r\n  \"category\": 1,\r\n  \"localId\": 13,\r\n  \"baseName\": \"ManaMissingPercent\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1013\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.ManaMissingPercent\",\r\n  \"enumValueConstraint\": null\r\n};",
          "MovementInitialMax: Resource = {\r\n  \"resType\": 2,\r\n  \"resProp\": 0,\r\n  \"category\": 1,\r\n  \"localId\": 14,\r\n  \"baseName\": \"MovementInitialMax\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1014\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.MovementInitialMax\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Movement: Resource = {\r\n  \"resType\": 2,\r\n  \"resProp\": 1,\r\n  \"category\": 1,\r\n  \"localId\": 15,\r\n  \"baseName\": \"Movement\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1015\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.Movement\",\r\n  \"enumValueConstraint\": null\r\n};",
          "MovementMax: Resource = {\r\n  \"resType\": 2,\r\n  \"resProp\": 2,\r\n  \"category\": 1,\r\n  \"localId\": 16,\r\n  \"baseName\": \"MovementMax\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1016\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.MovementMax\",\r\n  \"enumValueConstraint\": null\r\n};",
          "MovementRegen: Resource = {\r\n  \"resType\": 2,\r\n  \"resProp\": 4,\r\n  \"category\": 1,\r\n  \"localId\": 17,\r\n  \"baseName\": \"MovementRegen\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1017\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.MovementRegen\",\r\n  \"enumValueConstraint\": null\r\n};",
          "MovementMissing: Resource = {\r\n  \"resType\": 2,\r\n  \"resProp\": 3,\r\n  \"category\": 1,\r\n  \"localId\": 18,\r\n  \"baseName\": \"MovementMissing\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1018\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.MovementMissing\",\r\n  \"enumValueConstraint\": null\r\n};",
          "MovementPercent: Resource = {\r\n  \"resType\": 2,\r\n  \"resProp\": 5,\r\n  \"category\": 1,\r\n  \"localId\": 19,\r\n  \"baseName\": \"MovementPercent\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1019\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.MovementPercent\",\r\n  \"enumValueConstraint\": null\r\n};",
          "MovementMissingPercent: Resource = {\r\n  \"resType\": 2,\r\n  \"resProp\": 6,\r\n  \"category\": 1,\r\n  \"localId\": 20,\r\n  \"baseName\": \"MovementMissingPercent\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1020\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.MovementMissingPercent\",\r\n  \"enumValueConstraint\": null\r\n};",
          "SummonInitialMax: Resource = {\r\n  \"resType\": 3,\r\n  \"resProp\": 0,\r\n  \"category\": 1,\r\n  \"localId\": 21,\r\n  \"baseName\": \"SummonInitialMax\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1021\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.SummonInitialMax\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Summon: Resource = {\r\n  \"resType\": 3,\r\n  \"resProp\": 1,\r\n  \"category\": 1,\r\n  \"localId\": 22,\r\n  \"baseName\": \"Summon\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1022\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.Summon\",\r\n  \"enumValueConstraint\": null\r\n};",
          "SummonMax: Resource = {\r\n  \"resType\": 3,\r\n  \"resProp\": 2,\r\n  \"category\": 1,\r\n  \"localId\": 23,\r\n  \"baseName\": \"SummonMax\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1023\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.SummonMax\",\r\n  \"enumValueConstraint\": null\r\n};",
          "SummonRegen: Resource = {\r\n  \"resType\": 3,\r\n  \"resProp\": 4,\r\n  \"category\": 1,\r\n  \"localId\": 24,\r\n  \"baseName\": \"SummonRegen\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1024\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.SummonRegen\",\r\n  \"enumValueConstraint\": null\r\n};",
          "SummonMissing: Resource = {\r\n  \"resType\": 3,\r\n  \"resProp\": 3,\r\n  \"category\": 1,\r\n  \"localId\": 25,\r\n  \"baseName\": \"SummonMissing\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1025\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.SummonMissing\",\r\n  \"enumValueConstraint\": null\r\n};",
          "SummonPercent: Resource = {\r\n  \"resType\": 3,\r\n  \"resProp\": 5,\r\n  \"category\": 1,\r\n  \"localId\": 26,\r\n  \"baseName\": \"SummonPercent\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1026\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.SummonPercent\",\r\n  \"enumValueConstraint\": null\r\n};",
          "SummonMissingPercent: Resource = {\r\n  \"resType\": 3,\r\n  \"resProp\": 6,\r\n  \"category\": 1,\r\n  \"localId\": 27,\r\n  \"baseName\": \"SummonMissingPercent\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1027\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.SummonMissingPercent\",\r\n  \"enumValueConstraint\": null\r\n};",
          "RageInitialMax: Resource = {\r\n  \"resType\": 4,\r\n  \"resProp\": 0,\r\n  \"category\": 1,\r\n  \"localId\": 28,\r\n  \"baseName\": \"RageInitialMax\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1028\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.RageInitialMax\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Rage: Resource = {\r\n  \"resType\": 4,\r\n  \"resProp\": 1,\r\n  \"category\": 1,\r\n  \"localId\": 29,\r\n  \"baseName\": \"Rage\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1029\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.Rage\",\r\n  \"enumValueConstraint\": null\r\n};",
          "RageMax: Resource = {\r\n  \"resType\": 4,\r\n  \"resProp\": 2,\r\n  \"category\": 1,\r\n  \"localId\": 30,\r\n  \"baseName\": \"RageMax\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1030\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.RageMax\",\r\n  \"enumValueConstraint\": null\r\n};",
          "RageRegen: Resource = {\r\n  \"resType\": 4,\r\n  \"resProp\": 4,\r\n  \"category\": 1,\r\n  \"localId\": 31,\r\n  \"baseName\": \"RageRegen\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1031\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.RageRegen\",\r\n  \"enumValueConstraint\": null\r\n};",
          "RageMissing: Resource = {\r\n  \"resType\": 4,\r\n  \"resProp\": 3,\r\n  \"category\": 1,\r\n  \"localId\": 34,\r\n  \"baseName\": \"RageMissing\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1034\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.RageMissing\",\r\n  \"enumValueConstraint\": null\r\n};",
          "RagePercent: Resource = {\r\n  \"resType\": 4,\r\n  \"resProp\": 5,\r\n  \"category\": 1,\r\n  \"localId\": 35,\r\n  \"baseName\": \"RagePercent\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1035\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.RagePercent\",\r\n  \"enumValueConstraint\": null\r\n};",
          "RageMissingPercent: Resource = {\r\n  \"resType\": 4,\r\n  \"resProp\": 6,\r\n  \"category\": 1,\r\n  \"localId\": 36,\r\n  \"baseName\": \"RageMissingPercent\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1036\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.RageMissingPercent\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Shield: Resource = {\r\n  \"resType\": 5,\r\n  \"resProp\": 1,\r\n  \"category\": 1,\r\n  \"localId\": 38,\r\n  \"baseName\": \"Shield\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1038\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.Shield\",\r\n  \"enumValueConstraint\": null\r\n};",
          "ShieldRegen: Resource = {\r\n  \"resType\": 5,\r\n  \"resProp\": 4,\r\n  \"category\": 1,\r\n  \"localId\": 39,\r\n  \"baseName\": \"ShieldRegen\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"1039\",\r\n  \"nameModelUid\": \"CharacteristicType.Resource.ShieldRegen\",\r\n  \"enumValueConstraint\": null\r\n};"
        ],
        "type": "string",
        "format": ""
      },
      "RevealCreatureSpells": {
        "type": "object",
        "additionalProperties": false
      },
      "Revive": {
        "type": "object",
        "additionalProperties": false
      },
      "Rotation4Type": {
        "enum": [
          "top = 0",
          "right = 1",
          "bottom = 2",
          "left = 3"
        ],
        "type": "string",
        "format": ""
      },
      "SchemaDescription": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SpawnSummon": {
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SpawnSummonDouble": {
        "type": "object",
        "additionalProperties": false
      },
      "SpawnSummonDoubleIllusion": {
        "type": "object",
        "additionalProperties": false
      },
      "SpellAddStats": {
        "type": "object",
        "properties": {
          "stats": {
            "$ref": "#/components/schemas/SpellStats"
          }
        },
        "additionalProperties": false
      },
      "SpellCastHistory": {
        "type": "object",
        "properties": {
          "spellID": {
            "type": "string",
            "nullable": true
          },
          "cellID": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SpellChain": {
        "type": "object",
        "properties": {
          "maxChains": {
            "type": "integer",
            "format": "int32"
          },
          "chainZone": {
            "$ref": "#/components/schemas/IZone"
          },
          "targetFilter": {
            "$ref": "#/components/schemas/ICondition"
          }
        },
        "additionalProperties": false
      },
      "SpellMetaAddChildEffects": {
        "type": "object",
        "properties": {
          "effectParent": {
            "type": "string"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SpellMetaAddCosts": {
        "type": "object",
        "properties": {
          "stats": {
            "$ref": "#/components/schemas/IStats"
          }
        },
        "additionalProperties": false
      },
      "SpellMetaAddtats": {
        "type": "object",
        "properties": {
          "stats": {
            "$ref": "#/components/schemas/SpellModelStats"
          }
        },
        "additionalProperties": false
      },
      "SpellMetaChangeMaxRangeZone": {
        "type": "object",
        "properties": {
          "maxRange": {
            "$ref": "#/components/schemas/IZone"
          }
        },
        "additionalProperties": false
      },
      "SpellMetaChangeMinRangeZone": {
        "type": "object",
        "properties": {
          "minRange": {
            "$ref": "#/components/schemas/IZone"
          }
        },
        "additionalProperties": false
      },
      "SpellMetaConvertCosts": {
        "type": "object",
        "properties": {
          "input": {
            "$ref": "#/components/schemas/IStats"
          },
          "output": {
            "$ref": "#/components/schemas/IStats"
          }
        },
        "additionalProperties": false
      },
      "SpellMetaDeactivate": {
        "type": "object",
        "additionalProperties": false
      },
      "SpellMetaEffectAddBaseDamage": {
        "type": "object",
        "properties": {
          "addDmg": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SpellMetaEffectAddBaseHeal": {
        "type": "object",
        "properties": {
          "addHeal": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SpellMetaEffectChangeElement": {
        "type": "object",
        "properties": {
          "output": {
            "$ref": "#/components/schemas/ElementType"
          },
          "percentConversion": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SpellMetaEffectChangePenetration": {
        "type": "object",
        "properties": {
          "percentPenetration": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SpellMetaEffectChangeVariance": {
        "type": "object",
        "properties": {
          "percentVariance": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SpellMetaEffectChangeZone": {
        "type": "object",
        "properties": {
          "zone": {
            "$ref": "#/components/schemas/IZone"
          }
        },
        "additionalProperties": false
      },
      "SpellMetaModifyEffect": {
        "type": "object",
        "properties": {
          "effectId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SpellMetaModifySpell": {
        "type": "object",
        "properties": {
          "spell": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SpellModel": {
        "type": "object",
        "properties": {
          "entityUid": {
            "type": "string"
          },
          "modelUid": {
            "type": "string",
            "nullable": true
          },
          "nameId": {
            "type": "string"
          },
          "descriptionId": {
            "type": "string"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "skinIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "sourceCondition": {
            "$ref": "#/components/schemas/ICondition"
          },
          "targetFilter": {
            "$ref": "#/components/schemas/ICondition"
          },
          "statsId": {
            "type": "string"
          },
          "effectIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "rangeZoneMin": {
            "$ref": "#/components/schemas/IZone"
          },
          "rangeZoneMax": {
            "$ref": "#/components/schemas/IZone"
          }
        },
        "additionalProperties": false
      },
      "SpellModelCondition": {
        "type": "object",
        "properties": {
          "spellModelId": {
            "type": "string",
            "nullable": true
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType"
          },
          "comparator": {
            "$ref": "#/components/schemas/ConditionComparatorType"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "SpellModelProperty": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/CharacteristicCategory"
          },
          "localId": {
            "type": "integer",
            "format": "int32"
          },
          "baseName": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICondition"
            },
            "nullable": true
          },
          "statValueType": {
            "$ref": "#/components/schemas/StatValueType"
          },
          "id": {
            "type": "string"
          },
          "nameModelUid": {
            "type": "string",
            "nullable": true
          },
          "enumValueConstraint": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SpellModelPropertyTypes": {
        "enum": [
          "MaxCharges: SpellModelProperty = {\r\n  \"category\": 8,\r\n  \"localId\": 1,\r\n  \"baseName\": \"MaxCharges\",\r\n  \"defaultValue\": 0,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"8001\",\r\n  \"nameModelUid\": \"CharacteristicType.SpellModel.MaxCharges\",\r\n  \"enumValueConstraint\": null\r\n};",
          "MaxCastPerTarget: SpellModelProperty = {\r\n  \"category\": 8,\r\n  \"localId\": 2,\r\n  \"baseName\": \"MaxCastPerTarget\",\r\n  \"defaultValue\": 2147483647,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"8002\",\r\n  \"nameModelUid\": \"CharacteristicType.SpellModel.MaxCastPerTarget\",\r\n  \"enumValueConstraint\": null\r\n};",
          "MaxCastPerTurn: SpellModelProperty = {\r\n  \"category\": 8,\r\n  \"localId\": 3,\r\n  \"baseName\": \"MaxCastPerTurn\",\r\n  \"defaultValue\": 2147483647,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"8003\",\r\n  \"nameModelUid\": \"CharacteristicType.SpellModel.MaxCastPerTurn\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Cooldown: SpellModelProperty = {\r\n  \"category\": 8,\r\n  \"localId\": 4,\r\n  \"baseName\": \"Cooldown\",\r\n  \"defaultValue\": 0,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"8004\",\r\n  \"nameModelUid\": \"CharacteristicType.SpellModel.Cooldown\",\r\n  \"enumValueConstraint\": null\r\n};",
          "CooldownInitial: SpellModelProperty = {\r\n  \"category\": 8,\r\n  \"localId\": 5,\r\n  \"baseName\": \"CooldownInitial\",\r\n  \"defaultValue\": 0,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"8005\",\r\n  \"nameModelUid\": \"CharacteristicType.SpellModel.CooldownInitial\",\r\n  \"enumValueConstraint\": null\r\n};",
          "CooldownGlobal: SpellModelProperty = {\r\n  \"category\": 8,\r\n  \"localId\": 6,\r\n  \"baseName\": \"CooldownGlobal\",\r\n  \"defaultValue\": 0,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"8006\",\r\n  \"nameModelUid\": \"CharacteristicType.SpellModel.CooldownGlobal\",\r\n  \"enumValueConstraint\": null\r\n};",
          "MaxPierces: SpellModelProperty = {\r\n  \"category\": 8,\r\n  \"localId\": 7,\r\n  \"baseName\": \"MaxPierces\",\r\n  \"defaultValue\": 0,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"8007\",\r\n  \"nameModelUid\": \"CharacteristicType.SpellModel.MaxPierces\",\r\n  \"enumValueConstraint\": null\r\n};",
          "MaxChains: SpellModelProperty = {\r\n  \"category\": 8,\r\n  \"localId\": 8,\r\n  \"baseName\": \"MaxChains\",\r\n  \"defaultValue\": 0,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"8008\",\r\n  \"nameModelUid\": \"CharacteristicType.SpellModel.MaxChains\",\r\n  \"enumValueConstraint\": null\r\n};",
          "ChainRange: SpellModelProperty = {\r\n  \"category\": 8,\r\n  \"localId\": 9,\r\n  \"baseName\": \"ChainRange\",\r\n  \"defaultValue\": 0,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"8009\",\r\n  \"nameModelUid\": \"CharacteristicType.SpellModel.ChainRange\",\r\n  \"enumValueConstraint\": null\r\n};",
          "MaxForks: SpellModelProperty = {\r\n  \"category\": 8,\r\n  \"localId\": 10,\r\n  \"baseName\": \"MaxForks\",\r\n  \"defaultValue\": 0,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"8010\",\r\n  \"nameModelUid\": \"CharacteristicType.SpellModel.MaxForks\",\r\n  \"enumValueConstraint\": null\r\n};",
          "LineOfSightRequired: SpellModelProperty = {\r\n  \"category\": 8,\r\n  \"localId\": 20,\r\n  \"baseName\": \"LineOfSightRequired\",\r\n  \"defaultValue\": true,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"8020\",\r\n  \"nameModelUid\": \"CharacteristicType.SpellModel.LineOfSightRequired\",\r\n  \"enumValueConstraint\": null\r\n};",
          "BroadcastTargetedCell: SpellModelProperty = {\r\n  \"category\": 8,\r\n  \"localId\": 21,\r\n  \"baseName\": \"BroadcastTargetedCell\",\r\n  \"defaultValue\": true,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"8021\",\r\n  \"nameModelUid\": \"CharacteristicType.SpellModel.BroadcastTargetedCell\",\r\n  \"enumValueConstraint\": null\r\n};",
          "IsRangeModifiable: SpellModelProperty = {\r\n  \"category\": 8,\r\n  \"localId\": 22,\r\n  \"baseName\": \"IsRangeModifiable\",\r\n  \"defaultValue\": true,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"8022\",\r\n  \"nameModelUid\": \"CharacteristicType.SpellModel.IsRangeModifiable\",\r\n  \"enumValueConstraint\": null\r\n};"
        ],
        "type": "string",
        "format": ""
      },
      "SpellModelStats": {
        "type": "object",
        "properties": {
          "entityUid": {
            "type": "string"
          },
          "base": {
            "$ref": "#/components/schemas/CharacteristicIdIStatEntityDictionary"
          },
          "growth": {
            "$ref": "#/components/schemas/CharacteristicIdMathEquationEntityDictionary"
          }
        },
        "additionalProperties": false
      },
      "SpellProperty": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/CharacteristicCategory"
          },
          "localId": {
            "type": "integer",
            "format": "int32"
          },
          "baseName": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICondition"
            },
            "nullable": true
          },
          "statValueType": {
            "$ref": "#/components/schemas/StatValueType"
          },
          "id": {
            "type": "string"
          },
          "nameModelUid": {
            "type": "string",
            "nullable": true
          },
          "enumValueConstraint": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SpellPropertyTypes": {
        "enum": [
          "RemainingCharges: SpellProperty = {\r\n  \"category\": 7,\r\n  \"localId\": 0,\r\n  \"baseName\": \"RemainingCharges\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"7000\",\r\n  \"nameModelUid\": \"CharacteristicType.Spell.RemainingCharges\",\r\n  \"enumValueConstraint\": null\r\n};",
          "RemainingCooldown: SpellProperty = {\r\n  \"category\": 7,\r\n  \"localId\": 1,\r\n  \"baseName\": \"RemainingCooldown\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"7001\",\r\n  \"nameModelUid\": \"CharacteristicType.Spell.RemainingCooldown\",\r\n  \"enumValueConstraint\": null\r\n};",
          "NumberOfCastsThisTurn: SpellProperty = {\r\n  \"category\": 7,\r\n  \"localId\": 2,\r\n  \"baseName\": \"NumberOfCastsThisTurn\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"7002\",\r\n  \"nameModelUid\": \"CharacteristicType.Spell.NumberOfCastsThisTurn\",\r\n  \"enumValueConstraint\": null\r\n};",
          "NumberOfCastsThisTurnPerEntity: SpellProperty = {\r\n  \"category\": 7,\r\n  \"localId\": 3,\r\n  \"baseName\": \"NumberOfCastsThisTurnPerEntity\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 2,\r\n  \"id\": \"7003\",\r\n  \"nameModelUid\": \"CharacteristicType.Spell.NumberOfCastsThisTurnPerEntity\",\r\n  \"enumValueConstraint\": null\r\n};",
          "DamageDoneThisCast: SpellProperty = {\r\n  \"category\": 7,\r\n  \"localId\": 101,\r\n  \"baseName\": \"DamageDoneThisCast\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"7101\",\r\n  \"nameModelUid\": \"CharacteristicType.Spell.DamageDoneThisCast\",\r\n  \"enumValueConstraint\": null\r\n};",
          "HealDoneThisCast: SpellProperty = {\r\n  \"category\": 7,\r\n  \"localId\": 102,\r\n  \"baseName\": \"HealDoneThisCast\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"7102\",\r\n  \"nameModelUid\": \"CharacteristicType.Spell.HealDoneThisCast\",\r\n  \"enumValueConstraint\": null\r\n};",
          "ManaReducedThisCast: SpellProperty = {\r\n  \"category\": 7,\r\n  \"localId\": 103,\r\n  \"baseName\": \"ManaReducedThisCast\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"7103\",\r\n  \"nameModelUid\": \"CharacteristicType.Spell.ManaReducedThisCast\",\r\n  \"enumValueConstraint\": null\r\n};",
          "MovementReducedThisCast: SpellProperty = {\r\n  \"category\": 7,\r\n  \"localId\": 104,\r\n  \"baseName\": \"MovementReducedThisCast\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"7104\",\r\n  \"nameModelUid\": \"CharacteristicType.Spell.MovementReducedThisCast\",\r\n  \"enumValueConstraint\": null\r\n};"
        ],
        "type": "string",
        "format": ""
      },
      "SpellStats": {
        "type": "object",
        "properties": {
          "entityUid": {
            "type": "string"
          },
          "base": {
            "$ref": "#/components/schemas/CharacteristicIdIStatEntityDictionary"
          },
          "growth": {
            "$ref": "#/components/schemas/CharacteristicIdMathEquationEntityDictionary"
          }
        },
        "additionalProperties": false
      },
      "SpellStatsCondition": {
        "type": "object",
        "properties": {
          "spellModelId": {
            "type": "integer",
            "format": "int32"
          },
          "conditionStats": {
            "$ref": "#/components/schemas/IStats"
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType"
          },
          "comparator": {
            "$ref": "#/components/schemas/ConditionComparatorType"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "StatBool": {
        "type": "object",
        "properties": {
          "entityUid": {
            "type": "string"
          },
          "statId": {
            "type": "string"
          },
          "value": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "StatSimple": {
        "type": "object",
        "properties": {
          "entityUid": {
            "type": "string"
          },
          "statId": {
            "type": "string"
          },
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StatValueType": {
        "enum": [
          "Simple = 0",
          "Bool = 1",
          "EntityStatDictionary = 2",
          "List = 3"
        ],
        "type": "string",
        "format": ""
      },
      "State": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/CharacteristicCategory"
          },
          "localId": {
            "type": "integer",
            "format": "int32"
          },
          "baseName": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICondition"
            },
            "nullable": true
          },
          "statValueType": {
            "$ref": "#/components/schemas/StatValueType"
          },
          "id": {
            "type": "string"
          },
          "nameModelUid": {
            "type": "string",
            "nullable": true
          },
          "enumValueConstraint": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StateTypes": {
        "enum": [
          "Visible: State = {\r\n  \"category\": 4,\r\n  \"localId\": 1,\r\n  \"baseName\": \"Visible\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"4001\",\r\n  \"nameModelUid\": \"CharacteristicType.State.Visible\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Ghosted: State = {\r\n  \"category\": 4,\r\n  \"localId\": 2,\r\n  \"baseName\": \"Ghosted\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"4002\",\r\n  \"nameModelUid\": \"CharacteristicType.State.Ghosted\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Flying: State = {\r\n  \"category\": 4,\r\n  \"localId\": 3,\r\n  \"baseName\": \"Flying\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"4003\",\r\n  \"nameModelUid\": \"CharacteristicType.State.Flying\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Underground: State = {\r\n  \"category\": 4,\r\n  \"localId\": 4,\r\n  \"baseName\": \"Underground\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"4004\",\r\n  \"nameModelUid\": \"CharacteristicType.State.Underground\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Drenched: State = {\r\n  \"category\": 4,\r\n  \"localId\": 5,\r\n  \"baseName\": \"Drenched\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"4005\",\r\n  \"nameModelUid\": \"CharacteristicType.State.Drenched\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Shocked: State = {\r\n  \"category\": 4,\r\n  \"localId\": 6,\r\n  \"baseName\": \"Shocked\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"4006\",\r\n  \"nameModelUid\": \"CharacteristicType.State.Shocked\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Hot: State = {\r\n  \"category\": 4,\r\n  \"localId\": 7,\r\n  \"baseName\": \"Hot\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"4007\",\r\n  \"nameModelUid\": \"CharacteristicType.State.Hot\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Grounded: State = {\r\n  \"category\": 4,\r\n  \"localId\": 8,\r\n  \"baseName\": \"Grounded\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"4008\",\r\n  \"nameModelUid\": \"CharacteristicType.State.Grounded\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Unmoveable: State = {\r\n  \"category\": 4,\r\n  \"localId\": 9,\r\n  \"baseName\": \"Unmoveable\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"4009\",\r\n  \"nameModelUid\": \"CharacteristicType.State.Unmoveable\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Rooted: State = {\r\n  \"category\": 4,\r\n  \"localId\": 10,\r\n  \"baseName\": \"Rooted\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"4010\",\r\n  \"nameModelUid\": \"CharacteristicType.State.Rooted\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Gravity: State = {\r\n  \"category\": 4,\r\n  \"localId\": 11,\r\n  \"baseName\": \"Gravity\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"4011\",\r\n  \"nameModelUid\": \"CharacteristicType.State.Gravity\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Heavy: State = {\r\n  \"category\": 4,\r\n  \"localId\": 12,\r\n  \"baseName\": \"Heavy\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"4012\",\r\n  \"nameModelUid\": \"CharacteristicType.State.Heavy\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Carrying: State = {\r\n  \"category\": 4,\r\n  \"localId\": 13,\r\n  \"baseName\": \"Carrying\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"4013\",\r\n  \"nameModelUid\": \"CharacteristicType.State.Carrying\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Carried: State = {\r\n  \"category\": 4,\r\n  \"localId\": 14,\r\n  \"baseName\": \"Carried\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"4014\",\r\n  \"nameModelUid\": \"CharacteristicType.State.Carried\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Pacifist: State = {\r\n  \"category\": 4,\r\n  \"localId\": 15,\r\n  \"baseName\": \"Pacifist\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"4015\",\r\n  \"nameModelUid\": \"CharacteristicType.State.Pacifist\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Invulnerable: State = {\r\n  \"category\": 4,\r\n  \"localId\": 16,\r\n  \"baseName\": \"Invulnerable\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"4016\",\r\n  \"nameModelUid\": \"CharacteristicType.State.Invulnerable\",\r\n  \"enumValueConstraint\": null\r\n};",
          "InvulnerableDistance: State = {\r\n  \"category\": 4,\r\n  \"localId\": 17,\r\n  \"baseName\": \"InvulnerableDistance\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"4017\",\r\n  \"nameModelUid\": \"CharacteristicType.State.InvulnerableDistance\",\r\n  \"enumValueConstraint\": null\r\n};",
          "InvulnerableMelee: State = {\r\n  \"category\": 4,\r\n  \"localId\": 18,\r\n  \"baseName\": \"InvulnerableMelee\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"4018\",\r\n  \"nameModelUid\": \"CharacteristicType.State.InvulnerableMelee\",\r\n  \"enumValueConstraint\": null\r\n};",
          "UnlockLoS: State = {\r\n  \"category\": 4,\r\n  \"localId\": 19,\r\n  \"baseName\": \"UnlockLoS\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"4019\",\r\n  \"nameModelUid\": \"CharacteristicType.State.UnlockLoS\",\r\n  \"enumValueConstraint\": null\r\n};",
          "LockLoS: State = {\r\n  \"category\": 4,\r\n  \"localId\": 20,\r\n  \"baseName\": \"LockLoS\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"4020\",\r\n  \"nameModelUid\": \"CharacteristicType.State.LockLoS\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Unlockable: State = {\r\n  \"category\": 4,\r\n  \"localId\": 21,\r\n  \"baseName\": \"Unlockable\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"4021\",\r\n  \"nameModelUid\": \"CharacteristicType.State.Unlockable\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Unlocker: State = {\r\n  \"category\": 4,\r\n  \"localId\": 22,\r\n  \"baseName\": \"Unlocker\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 1,\r\n  \"id\": \"4022\",\r\n  \"nameModelUid\": \"CharacteristicType.State.Unlocker\",\r\n  \"enumValueConstraint\": null\r\n};"
        ],
        "type": "string",
        "format": ""
      },
      "Stats": {
        "type": "object",
        "properties": {
          "entityUid": {
            "type": "string"
          },
          "base": {
            "$ref": "#/components/schemas/CharacteristicIdIStatEntityDictionary"
          },
          "growth": {
            "$ref": "#/components/schemas/CharacteristicIdMathEquationEntityDictionary"
          }
        },
        "additionalProperties": false
      },
      "StatusContainerProperty": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/CharacteristicCategory"
          },
          "localId": {
            "type": "integer",
            "format": "int32"
          },
          "baseName": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICondition"
            },
            "nullable": true
          },
          "statValueType": {
            "$ref": "#/components/schemas/StatValueType"
          },
          "id": {
            "type": "string"
          },
          "nameModelUid": {
            "type": "string",
            "nullable": true
          },
          "enumValueConstraint": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatusContainerPropertyTypes": {
        "enum": [
          "MergeStrategy: StatusContainerProperty = {\r\n  \"category\": 9,\r\n  \"localId\": 0,\r\n  \"baseName\": \"MergeStrategy\",\r\n  \"defaultValue\": 0,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"9000\",\r\n  \"nameModelUid\": \"CharacteristicType.StatusContainer.MergeStrategy\",\r\n  \"enumValueConstraint\": \"souchy.celebi.eevee.enums.StatusMergeStrategy, Eevee, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\"\r\n};",
          "UnbewitchStrategy: StatusContainerProperty = {\r\n  \"category\": 9,\r\n  \"localId\": 1,\r\n  \"baseName\": \"UnbewitchStrategy\",\r\n  \"defaultValue\": 0,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"9001\",\r\n  \"nameModelUid\": \"CharacteristicType.StatusContainer.UnbewitchStrategy\",\r\n  \"enumValueConstraint\": \"souchy.celebi.eevee.enums.StatusUnbewitchStrategy, Eevee, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\"\r\n};",
          "MaxStacks: StatusContainerProperty = {\r\n  \"category\": 9,\r\n  \"localId\": 2,\r\n  \"baseName\": \"MaxStacks\",\r\n  \"defaultValue\": 0,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"9002\",\r\n  \"nameModelUid\": \"CharacteristicType.StatusContainer.MaxStacks\",\r\n  \"enumValueConstraint\": null\r\n};",
          "MaxDelay: StatusContainerProperty = {\r\n  \"category\": 9,\r\n  \"localId\": 3,\r\n  \"baseName\": \"MaxDelay\",\r\n  \"defaultValue\": 0,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"9003\",\r\n  \"nameModelUid\": \"CharacteristicType.StatusContainer.MaxDelay\",\r\n  \"enumValueConstraint\": null\r\n};",
          "MaxDuration: StatusContainerProperty = {\r\n  \"category\": 9,\r\n  \"localId\": 4,\r\n  \"baseName\": \"MaxDuration\",\r\n  \"defaultValue\": 0,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"9004\",\r\n  \"nameModelUid\": \"CharacteristicType.StatusContainer.MaxDuration\",\r\n  \"enumValueConstraint\": null\r\n};"
        ],
        "type": "string",
        "format": ""
      },
      "StatusContainerStats": {
        "type": "object",
        "properties": {
          "entityUid": {
            "type": "string"
          },
          "base": {
            "$ref": "#/components/schemas/CharacteristicIdIStatEntityDictionary"
          },
          "growth": {
            "$ref": "#/components/schemas/CharacteristicIdMathEquationEntityDictionary"
          }
        },
        "additionalProperties": false
      },
      "StatusInstanceProperty": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/CharacteristicCategory"
          },
          "localId": {
            "type": "integer",
            "format": "int32"
          },
          "baseName": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICondition"
            },
            "nullable": true
          },
          "statValueType": {
            "$ref": "#/components/schemas/StatValueType"
          },
          "id": {
            "type": "string"
          },
          "nameModelUid": {
            "type": "string",
            "nullable": true
          },
          "enumValueConstraint": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatusInstancePropertyTypes": {
        "enum": [
          "Delay: StatusInstanceProperty = {\r\n  \"category\": 10,\r\n  \"localId\": 1,\r\n  \"baseName\": \"Delay\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"10001\",\r\n  \"nameModelUid\": \"CharacteristicType.StatusInstance.Delay\",\r\n  \"enumValueConstraint\": null\r\n};",
          "Duration: StatusInstanceProperty = {\r\n  \"category\": 10,\r\n  \"localId\": 2,\r\n  \"baseName\": \"Duration\",\r\n  \"defaultValue\": null,\r\n  \"conditions\": [],\r\n  \"statValueType\": 0,\r\n  \"id\": \"10002\",\r\n  \"nameModelUid\": \"CharacteristicType.StatusInstance.Duration\",\r\n  \"enumValueConstraint\": null\r\n};"
        ],
        "type": "string",
        "format": ""
      },
      "StatusInstanceStats": {
        "type": "object",
        "properties": {
          "entityUid": {
            "type": "string"
          },
          "base": {
            "$ref": "#/components/schemas/CharacteristicIdIStatEntityDictionary"
          },
          "growth": {
            "$ref": "#/components/schemas/CharacteristicIdMathEquationEntityDictionary"
          }
        },
        "additionalProperties": false
      },
      "StatusMergeStrategy": {
        "enum": [
          "Ignore = 0",
          "ReplaceLast = 1"
        ],
        "type": "string",
        "format": ""
      },
      "StatusModel": {
        "type": "object",
        "properties": {
          "entityUid": {
            "type": "string"
          },
          "modelUid": {
            "type": "string",
            "nullable": true
          },
          "nameId": {
            "type": "string"
          },
          "descriptionId": {
            "type": "string"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "skinIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "statsId": {
            "type": "string"
          },
          "priority": {
            "$ref": "#/components/schemas/StatusPriorityType"
          },
          "effectIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatusModelCondition": {
        "type": "object",
        "properties": {
          "statusModelId": {
            "type": "string",
            "nullable": true
          },
          "boardTargetType": {
            "$ref": "#/components/schemas/BoardTargetType"
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType"
          },
          "comparator": {
            "$ref": "#/components/schemas/ConditionComparatorType"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "StatusModelStats": {
        "type": "object",
        "properties": {
          "entityUid": {
            "type": "string"
          },
          "base": {
            "$ref": "#/components/schemas/CharacteristicIdIStatEntityDictionary"
          },
          "growth": {
            "$ref": "#/components/schemas/CharacteristicIdMathEquationEntityDictionary"
          }
        },
        "additionalProperties": false
      },
      "StatusPriorityType": {
        "enum": [
          "System = 0",
          "Passive = 1",
          "Status = 2"
        ],
        "type": "string",
        "format": ""
      },
      "StatusStatsCondition": {
        "type": "object",
        "properties": {
          "statusModelId": {
            "type": "integer",
            "format": "int32"
          },
          "boardTargetType": {
            "$ref": "#/components/schemas/BoardTargetType"
          },
          "conditionStats": {
            "$ref": "#/components/schemas/IStats"
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType"
          },
          "comparator": {
            "$ref": "#/components/schemas/ConditionComparatorType"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "StatusTeamCondition": {
        "type": "object",
        "properties": {
          "team": {
            "$ref": "#/components/schemas/TeamRelationType"
          },
          "actorType": {
            "$ref": "#/components/schemas/ActorType"
          },
          "comparator": {
            "$ref": "#/components/schemas/ConditionComparatorType"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "StatusUnbewitchStrategy": {
        "enum": [
          "Dispellable = 0",
          "DispellableOnDeath = 1",
          "NonDispellable = 2"
        ],
        "type": "string",
        "format": ""
      },
      "StringEntity": {
        "type": "object",
        "properties": {
          "entityUid": {
            "type": "string"
          },
          "modelUid": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SwapIn": {
        "type": "object",
        "properties": {
          "ignoreInCooldown": {
            "type": "boolean"
          },
          "overrideOutCooldown": {
            "type": "boolean"
          },
          "setOutCooldown": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SwapOut": {
        "type": "object",
        "properties": {
          "ignoreOutCooldown": {
            "type": "boolean"
          },
          "overrideInCooldown": {
            "type": "boolean"
          },
          "setInCooldown": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SwapSelfWith": {
        "type": "object",
        "additionalProperties": false
      },
      "SwapTargetWith": {
        "type": "object",
        "properties": {
          "moveTargetZone": {
            "$ref": "#/components/schemas/IZone"
          }
        },
        "additionalProperties": false
      },
      "TakeDamageAsElement": {
        "type": "object",
        "properties": {
          "input": {
            "$ref": "#/components/schemas/ElementType"
          },
          "output": {
            "$ref": "#/components/schemas/ElementType"
          },
          "percentConversion": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TargetSamplingType": {
        "enum": [
          "closestToOrigin = 0",
          "furthestToOrigin = 1",
          "closestToSource = 2",
          "furthestToSource = 3",
          "random = 4"
        ],
        "type": "string",
        "format": ""
      },
      "TeamRelationType": {
        "enum": [
          "Ally = 0",
          "Enemy = 1",
          "Self = 2"
        ],
        "type": "string",
        "format": ""
      },
      "TeleportSelfBy": {
        "type": "object",
        "properties": {
          "distance": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TeleportSelfTo": {
        "type": "object",
        "additionalProperties": false
      },
      "TeleportSelfToScript": {
        "type": "object",
        "properties": {
          "schemaType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TeleportSymmetricallyAoeOverTarget": {
        "type": "object",
        "properties": {
          "moveTargetZone": {
            "$ref": "#/components/schemas/IZone"
          }
        },
        "additionalProperties": false
      },
      "TeleportSymmetricallySelfOverTarget": {
        "type": "object",
        "additionalProperties": false
      },
      "TeleportSymmetricallyTargetOverSelf": {
        "type": "object",
        "additionalProperties": false
      },
      "TeleportTargetBy": {
        "type": "object",
        "properties": {
          "distance": {
            "type": "integer",
            "format": "int32"
          },
          "moveTargetZone": {
            "$ref": "#/components/schemas/IZone"
          }
        },
        "additionalProperties": false
      },
      "TeleportTargetTo": {
        "type": "object",
        "properties": {
          "moveTargetZone": {
            "$ref": "#/components/schemas/IZone"
          }
        },
        "additionalProperties": false
      },
      "TeleportTargetToScript": {
        "type": "object",
        "properties": {
          "schemaType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TeleportToPreviousPosition": {
        "type": "object",
        "additionalProperties": false
      },
      "TeleportToStartOfFightPosition": {
        "type": "object",
        "additionalProperties": false
      },
      "TeleportToStartOfTurnPosition": {
        "type": "object",
        "additionalProperties": false
      },
      "TextEntityAggregation": {
        "type": "object",
        "properties": {
          "entityUid": {
            "type": "string"
          },
          "modelUid": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/IStringEntity"
          },
          "description": {
            "$ref": "#/components/schemas/IStringEntity"
          }
        },
        "additionalProperties": false
      },
      "TowerDirectionType": {
        "enum": [
          "up = 0",
          "down = 1",
          "both = 2"
        ],
        "type": "string",
        "format": ""
      },
      "TransferLife": {
        "type": "object",
        "properties": {
          "transferFrom": {
            "$ref": "#/components/schemas/IZone"
          },
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "percentVariance": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TransferLifeScript": {
        "type": "object",
        "properties": {
          "schemaType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TransferPercentLifeMax": {
        "type": "object",
        "properties": {
          "transferFrom": {
            "$ref": "#/components/schemas/IZone"
          },
          "percentValue": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TriggerModel": {
        "type": "object",
        "properties": {
          "triggerOrderType": {
            "$ref": "#/components/schemas/TriggerOrderType"
          },
          "triggerZone": {
            "$ref": "#/components/schemas/IZone"
          },
          "triggererFilter": {
            "$ref": "#/components/schemas/ICondition"
          },
          "holderCondition": {
            "$ref": "#/components/schemas/ICondition"
          },
          "schema": {
            "$ref": "#/components/schemas/ITriggerSchema"
          }
        },
        "additionalProperties": false
      },
      "TriggerOrderType": {
        "enum": [
          "Before = 0",
          "Apply = 1",
          "After = 2"
        ],
        "type": "string",
        "format": ""
      },
      "TriggerType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "schemaType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UnspawnSummon": {
        "type": "object",
        "additionalProperties": false
      },
      "UpdateResult": {
        "type": "object",
        "properties": {
          "isAcknowledged": {
            "type": "boolean",
            "readOnly": true
          },
          "isModifiedCountAvailable": {
            "type": "boolean",
            "readOnly": true
          },
          "matchedCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "modifiedCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "upsertedId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Walk": {
        "type": "object",
        "properties": {
          "moveTargetZone": {
            "$ref": "#/components/schemas/IZone"
          }
        },
        "additionalProperties": false
      },
      "ZoneType": {
        "enum": [
          "point = 0",
          "line = 1",
          "diagonal = 2",
          "cross = 3",
          "xcross = 4",
          "star = 5",
          "crossHalf = 6",
          "xcrossHalf = 7",
          "circle = 8",
          "circleHalf = 9",
          "square = 10",
          "squareHalf = 11",
          "rectangle = 12",
          "ellipse = 13",
          "ellipseHalf = 14",
          "board = 15",
          "offboard = 16",
          "all = 17"
        ],
        "type": "string",
        "format": ""
      }
    }
  }
}