@startuml mdd

package jade {


	package jade.filters {
		interface Filter {}
	}

	package jade.story {
		class Book {
			+int id
			+List<Statement> statements
		}
		note right: Action
		Book *-- Statement
		class Statement {
			+isGroup(): bool
			+asGroup(): StatementGroup
			+asEffect(): EffectModel
		}
		class StatementGroup {
			+Condition condition
			+List<Statement> children
			+List<Statement> childrenOtherwise
		}
		class StatementEffect {
			+EffectModel effect
		}
		Statement <|-- StatementEffect
		Statement <|-- StatementGroup
	}

	class CreatureModel {
		+int id
		+Stats stats
		+List<SpellModel> spells
		+List<Status> status
	}
	
	

	package jade.spell {
		class SpellModel {
			+int actionId
			+String id
			+SpellConditions conditions
			+List<Cost> costs
		}
		CreatureModel o-- SpellModel
		' SpellModel o-- Book
		SpellModel --> Book

		struct SpellConditions {
			+Aoe cellConditions = new Aoe(1,1)
			+int castPerTarget = 0
			+int castPerTurn = 0
			+int cooldown = 0
			+int range = 1
		}
		SpellModel *-- SpellConditions
		struct Cost {
			+Mod resource
			+int amount
		}
		SpellModel *-- Cost

	}

	
	package jade.effects {
		class EffectModel {
			+Zone zone
			
			+int towerHeightMax = 1
			+bool towerFromBottom = true
			+bool appliesCells
			+bool appliesCreatures

			+int depthMax = 0
			+bool appliesFlying
			+bool appliesUnderground
			+bool appliesWet
			+bool appliesGrounded


			+int height
			+int directionUpDown
			+int length

			{abstract} +EffectType type()
		}
		StatementEffect *-- EffectModel

		struct AddStatusEffect {
		}
		struct DamageEffect {
			+int power
		}
		struct SummonEffect {
			+int creatureModelId
		}
		struct RebaseEffect {

		}

		EffectModel <|-- AddStatusEffect
		EffectModel <|-- DamageEffect
		EffectModel <|-- SummonEffect
		EffectModel <|-- RebaseEffect
	}

	package jade.effects.moves {
		
	}

	package jade.aoes {
		' class Aoe {}
		class Zone {}
		class ZoneType {}
		class ZoneBuilder {}
	}

	class Condition {

	}
	StatementGroup --> Condition


	class Trigger {
		+int actionid
	}
	AddStatusEffect --> Trigger


}
