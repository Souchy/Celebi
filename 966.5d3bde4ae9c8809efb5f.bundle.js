"use strict";(self.webpackChunkJolteon=self.webpackChunkJolteon||[]).push([[966,177],{7458:(e,t,i)=>{i.d(t,{Z:()=>a});var n=i(8081),r=i.n(n),s=i(3645),o=i.n(s)()(r());o.push([e.id,"assetmanager .fileSystem {\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  width: 80%;\n}\nassetmanager .directory,\nassetmanager .file {\n  display: block;\n  margin: 8px;\n  padding: 8px;\n  width: 125px;\n  height: 125px;\n  border-color: var(--accent1);\n  border-style: solid;\n  border-width: 1px;\n  cursor: pointer;\n}\nassetmanager .directory .title,\nassetmanager .file .title {\n  position: absolute;\n  width: calc(100% - 16px);\n  height: 50px;\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  word-break: break-all;\n}\nassetmanager .directory:hover,\nassetmanager .file:hover {\n  box-shadow: 0px 0px 6px var(--accent1);\n}\nassetmanager .directory {\n  background-color: burlywood;\n}\nassetmanager .file {\n  position: relative;\n}\nassetmanager img {\n  width: 100%;\n  height: 100%;\n}\n",""]);const a=o},4708:(e,t,i)=>{i.d(t,{Z:()=>a});var n=i(8081),r=i.n(n),s=i(3645),o=i.n(s)()(r());o.push([e.id,"mapeditor .hz {\n  display: flex;\n  margin: 0px;\n}\nmapeditor .renderer {\n  border-color: var(--accent1);\n  border-width: 1px;\n  border-style: solid;\n  margin-left: 0px;\n  margin-right: 50px;\n}\nmapeditor .buttonset {\n  border-color: rgba(65, 65, 65, 0.562);\n  border-width: 0px 0px 1px 0px;\n  border-style: solid;\n  padding-right: 5px;\n  padding-bottom: 10px;\n  margin-bottom: 10px;\n}\nmapeditor .buttonset div {\n  display: flex;\n}\nmapeditor .buttonset div * {\n  margin-right: 10px;\n}\n",""]);const a=o},5177:(e,t,i)=>{i.r(t),i.d(t,{Dir:()=>I,default:()=>W});var n={};i.r(n),i.d(n,{default:()=>k,dependencies:()=>T,name:()=>w,register:()=>P,template:()=>x});var r=i(655),s=i(1542),o=i(3379),a=i.n(o),l=i(7795),c=i.n(l),h=i(569),d=i.n(h),p=i(3565),m=i.n(p),b=i(9216),g=i.n(b),u=i(4589),f=i.n(u),y=i(7458),v={};v.styleTagTransform=f(),v.setAttributes=m(),v.insert=d().bind(null,"head"),v.domAPI=c(),v.insertStyleElement=g(),a()(y.Z,v),y.Z&&y.Z.locals&&y.Z.locals;const w="assetmanager",x='<template as-custom-element="directory">\n  <bindable property="dir"></bindable>\n  ${dir.name}\n  \x3c!-- - ${fileType(f)} --\x3e\n</template>\n<template as-custom-element="file">\n  <bindable property="file"></bindable>\n  <bindable property="type"></bindable>\n  <bindable property="path"></bindable>\n  \n  <div class="title">${file.name}</div>\n  <template switch.bind="type">\n    <img case="image" src="${path}">\n  </template>\n\n</template>\n\n\n<h1>hi assets</h1>\n\n\x3c!-- <input type="file" onchange.trigger="e => clickSelectFiles(e)">\n\n<input type="file" id="filepicker" name="fileList" webkitdirectory multiple onchange.trigger="e => clickSelectFiles(e)"/> --\x3e\n\n<button class="btn" click.trigger="e => clickImport(e)">Piranha import</button>\n<button class="btn" click.trigger="recoverFileSystem()">Piranha reload</button>\n\n\n<h3>Current directory: <span innerhtml.bind="currentDirectory"></span></h3>\n<div class="fileSystem">\n\n  \x3c!-- <div class.bind="instanceType(file)" repeat.for="file of fileSystem" click.trigger="clickFile(file)">\n    ${file.name} - ${fileType(file)}\n  </div> --\x3e\n\n  <div class="directory" click.trigger="clickFile(null)">...</div>\n\n  \x3c!-- <div> --\x3e\n  <template repeat.for="file of getFilteredFileSystem" switch.bind="instanceType(file)">\n    <directory class.bind="instanceType(file)" case="directory" dir.bind="file" click.trigger="clickFile(file)"></directory>\n    <file class.bind="instanceType(file)" case="file" file.bind="file" type.bind="fileType(file)" path.bind="getPath(file)" click.trigger="clickFile(file)"></file>\n  </template>\n  \x3c!-- </div> --\x3e\n\n</div>\n',k=x,T=[];let F;function P(e){F||(F=s.b_N.define({name:w,template:x,dependencies:T})),e.register(F)}var D=i(9477),S=i(3867),M=i(2739);i(1932);let C=class{constructor(){this.currentDirectory="/",this.size={width:500,height:405},this.scene=new D.xsS,this.camera=new D.cPb(75,this.size.width/this.size.height,.1,1e3),this.renderer=new D.CP7,this.loader=new S.E}playThreeTest(){this.renderer.setSize(this.size.width,this.size.height),this.currentDirectory="";let e=new D.DvJ(1,1,1),t=new D.vBJ({color:65280});this.cube=new D.Kj0(e,t),this.loader.load("G:/Assets/0-blender/map6/map_6.glb",(function(e){this.scene.add(e.scene)}),void 0,(function(e){console.error(e)})),this.camera.position.z=5,this.render()}render(){requestAnimationFrame((()=>this.render())),this.animate(),this.renderer.render(this.scene,this.camera)}animate(){this.cube.rotation.x+=.01,this.cube.rotation.y+=.01}async recoverFileSystem(){let e=await(0,M.U2)("celebi:fileSystem");e?await this.verifyPermission(e)?(await this.importDirectory(e),console.log("recovered file system ")):console.log("file system access denied"):console.log("no file system in db")}async verifyPermission(e){let t={mode:"read"};return"granted"===await e.queryPermission(t)||"granted"===await e.requestPermission(t)}clickSelectFiles(e){console.log("selected files:"),console.log(e)}async clickImport(e){console.log("import "+JSON.stringify(e));let t=await window.showDirectoryPicker();await(0,M.t8)("celebi:fileSystem",t),this.importDirectory(t)}async importDirectory(e){let t=new I;t.name=e.name,t.files=await this.findFiles(e),this.fileSystem=t}async findFiles(e){var t,i,n,s;let o=[],a=[];try{for(var l,c=!0,h=(0,r.KL)(e.values());!(t=(l=await h.next()).done);){s=l.value,c=!1;try{const e=s;let t=await this.verifyPermission(e);if(console.log("permission: "+t+", "+e.name),"directory"===e.kind){let t=await this.findFiles(e),i=new I;i.name=e.name,i.files=t,o.push(i)}if("file"===e.kind){let t=e.getFile().then((e=>e));a.push(t)}}finally{c=!0}}}catch(e){i={error:e}}finally{try{c||t||!(n=h.return)||await n.call(h)}finally{if(i)throw i.error}}let d=await Promise.all(a);return o.push(...d),o}instanceType(e){return e?e.isDir?"directory":"file":"directory"}isDir(e){return e.isDir}getPath(e){return URL.createObjectURL(e)}fileType(e){return e.type.split("/")[0]}isImage(e){return e.type.includes("image")}clickFile(e){if(console.log("clickFile1: "+e+", currDir: "+this.currentDirectory),e)this.isDir(e)&&(this.currentDirectory+=e.name+"/");else{let e=this.currentDirectory.lastIndexOf("/",this.currentDirectory.lastIndexOf("/")-1);console.log("i: "+e),-1!=e&&(this.currentDirectory=this.currentDirectory.substring(0,e+1))}console.log("clickFile2: "+e+", currDir: "+this.currentDirectory)}get getFilteredFileSystem(){var e;if("/"==this.currentDirectory)return null===(e=this.fileSystem)||void 0===e?void 0:e.files;let t=this.currentDirectory.split("/").map((e=>e.trim())).filter((e=>""!=e)),i=this.fileSystem;for(let e of t)""!=e&&(i=i.files.find((t=>t.name==e)));return null==i?void 0:i.files}};C=(0,r.gn)([(0,s.MoW)(n),(0,r.w6)("design:paramtypes",[])],C);const W=C;class I{constructor(){this.isDir=!0,this.type="directory"}}},4966:(e,t,i)=>{i.r(t),i.d(t,{MapEditor:()=>E});var n={};i.r(n),i.d(n,{default:()=>T,dependencies:()=>F,name:()=>x,register:()=>D,template:()=>k});var r=i(655),s=i(1542),o=i(3379),a=i.n(o),l=i(7795),c=i.n(l),h=i(569),d=i.n(h),p=i(3565),m=i.n(p),b=i(9216),g=i.n(b),u=i(4589),f=i.n(u),y=i(4708),v={};v.styleTagTransform=f(),v.setAttributes=m(),v.insert=d().bind(null,"head"),v.domAPI=c(),v.insertStyleElement=g(),a()(y.Z,v),y.Z&&y.Z.locals&&y.Z.locals;var w=i(5177);const x="mapeditor",k='\n\n\n<h1>hi map editor</h1>\n\n<div class="hz">\n  <div class="renderer">\n    ${renderer.domElement}\n  </div>\n\n  <div class="properties">\n    <div>\n      <h1>Map properties</h1>\n      <div class="buttonset">\n        <span>View</span>\n        <div>\n          <button style="width: 50px;" class="btn" click.trigger="clickView()" innerhtml.bind="btnViewText"></button>\n          <button class="btn" click.trigger="clickLayer()">Layer 0</button>\n        </div>\n      </div>\n      <div class="buttonset">\n        <span>Brush</span>\n        <div>\n          <input type="checkbox" class="btn-check" id="btn-check-block" autocomplete="off" checked.bind="mode[prop]" change.trigger="onChange()">\n          <label class="btn btn-outline shadow-none" for="btn-check-block">Block</label><br>\n          <input type="checkbox" class="btn-check" id="btn-check-floor" autocomplete="off" checked.bind="mode[prop]" change.trigger="onChange()">\n          <label class="btn btn-outline shadow-none" for="btn-check-floor">Floor</label><br>\n          <input type="checkbox" class="btn-check" id="btn-check-hole" autocomplete="off" checked.bind="mode[prop]" change.trigger="onChange()">\n          <label class="btn btn-outline shadow-none" for="btn-check-hole">Hole</label><br>\n        </div>\n      </div>\n      <div class="buttonset">\n        <span>Mode</span>\n        <div>\n          <input type="checkbox" class="btn-check" id="btn-check-select" autocomplete="off" checked.bind="mode[prop]" change.trigger="onChange()">\n          <label class="btn btn-outline shadow-none" for="btn-check-select">Select</label><br>\n          <input type="checkbox" class="btn-check" id="btn-check-draw" autocomplete="off" checked.bind="mode[prop]" change.trigger="onChange()">\n          <label class="btn btn-outline shadow-none" for="btn-check-draw">Draw</label><br>\n          <input type="checkbox" class="btn-check" id="btn-check-erase" autocomplete="off" checked.bind="mode[prop]" change.trigger="onChange()">\n          <label class="btn btn-outline shadow-none" for="btn-check-erase">Erase</label><br>\n        </div>\n      </div>\n      <div class="buttonset">\n        <div innerhtml.bind="getPointerText"></div>\n        <div>Selected: ${selected.position.x} ${selected.position.y}</div>\n      </div>\n\n      <div class="buttonset">\n        <div>\n          Block model:\n          \x3c!-- <button class="btn">Select...</button> --\x3e\n          <input type="file" id="fileSelector-blockModel" onchange.trigger="e => clickSelectFiles(e)" />\n          <label class="btn btn-outline shadow-none" for="fileSelector-blockModel">Select...</label><br>\n        </div>\n        <div>\n          Floor model: <button class="btn">Select...</button>\n        </div>\n      </div>\n\n    </div>\n    <assetmanager></assetmanager>\n  </div>\n</div>\n',T=k,F=[w];let P;function D(e){P||(P=s.b_N.define({name:x,template:k,dependencies:F})),e.register(P)}var S,M=i(9477),C=i(3867),W=i(9344);class I{static generateMap(){}static getCellIdForPosition(e,t){return e*I.mapWidth+t}static getPositionForCellId(e){let t=e%I.mapWidth;return{x:t,y:(e-t)/I.mapWidth}}}I.mapWidth=20,I.mapHeight=20,I.cellCount=I.mapWidth*I.mapHeight,I.segmentLength=40,I.u=2*Math.sin(60*Math.PI/180)*I.segmentLength,I.v=2*Math.sin(30*Math.PI/180)*I.segmentLength,I.w=15,I.cellhalf=.5,function(e){e[e.hole=0]="hole",e[e.floor=1]="floor",e[e.block=2]="block"}(S||(S={})),i(1932);let E=class{constructor(e){this.ea=e,this.size={width:900,height:800},this.scene=new M.xsS,this.renderer=new M.CP7({alpha:!0}),this.loader=new C.E,this.camera=new M.iKG(1,1,1,1,.1,1e3),this.axesHelper=new M.y8_(10),this.raycaster=new M.iMs,this.plane=new M.JOQ,this.intersections=[],this.selected=null,this.hovered=null,this.worldPosition=new M.Pa4,this.objects=[],this.lastFrameTime=0,this.time=13e3,this.delta=1,this.period=3e4,this.pointer={x:0,y:0},this.btnViewText="Top",console.log("ctor map editor"),this.playThreeTest()}playThreeTest(){this.renderer.setSize(this.size.width,this.size.height),this.scene.add(this.axesHelper),this.renderer.domElement.addEventListener("pointermove",(e=>this.onPointerMove(e))),this.renderer.domElement.addEventListener("pointerdown",(e=>this.onPointerDown(e)));const e=new M._12(1,1),t=new M.vBJ({color:16711935,side:M.ehD});this.cursor=new M.Kj0(e,t),this.scene.add(this.cursor),this.generateTestMap(),this.viewTop(),this.viewIso(),this.render()}render(){requestAnimationFrame((()=>this.render()));let e=Date.now();this.lastFrameTime||(this.lastFrameTime=e-1e3/60);var t=e-this.lastFrameTime;this.lastFrameTime=e,this.animate(t),this.renderer.render(this.scene,this.camera)}animate(e){}viewTop(){this.camera.left=-(I.mapWidth+2)/2,this.camera.right=(I.mapWidth+2)/2,this.camera.top=(I.mapHeight+2)/2,this.camera.bottom=-(I.mapHeight+2)/2,this.camera.updateProjectionMatrix(),this.camera.position.set(I.mapWidth/2,I.mapHeight/2-1,15),this.camera.lookAt(I.mapWidth/2,I.mapHeight/2,0),this.camera.up.set(0,0,1)}viewIso(){this.camera.left=-(I.mapWidth+10)/2,this.camera.right=(I.mapWidth+10)/2,this.camera.top=(I.mapHeight+10)/2,this.camera.bottom=-(I.mapHeight+10)/2,this.camera.updateProjectionMatrix(),this.camera.position.set(I.mapWidth,0,20),this.camera.lookAt(I.mapWidth/2,I.mapHeight/2,0),this.camera.up.set(0,0,1)}rotateCamera(e){this.time+=e,this.time>=this.period&&(this.time=0);let t=(this.period-this.time)/this.period*2*Math.PI,i=10*Math.sin(t),n=10*Math.cos(t);this.camera.position.x=i+I.mapWidth/2,this.camera.position.y=n+I.mapHeight/2,this.time+=1,this.time>=this.period&&(this.time=0)}generateTestMap(){this.model={},this.model.cells=[];for(let e=0;e<I.mapWidth;e++)for(let t=0;t<I.mapHeight;t++){let i=I.getCellIdForPosition(e,t);this.model.cells[i]=S.hole;let n=new M.DvJ(1,1,1),r=(e+t)%2?4337180:1184274,s=new M.vBJ({color:r}),o=new M.Kj0(n,s);this.objects.push(o),this.scene.add(o),o.position.set(e+I.cellhalf,t+I.cellhalf,-.5)}}get getPointerText(){var e,t;return"Hovered: "+(null===(e=this.hovered)||void 0===e?void 0:e.position.x)+", "+(null===(t=this.hovered)||void 0===t?void 0:t.position.y)}updatePointer(e){const t=this.renderer.domElement.getBoundingClientRect();this.pointer.x=(e.clientX-t.left)/t.width*2-1,this.pointer.y=-(e.clientY-t.top)/t.height*2+1,this.hovered&&this.cursor.position.set(this.hovered.position.x,this.hovered.position.y,.01)}onPointerMove(e){if(this.updatePointer(e),this.raycaster.setFromCamera(this.pointer,this.camera),"mouse"===e.pointerType||"pen"===e.pointerType)if(this.intersections.length=0,this.raycaster.setFromCamera(this.pointer,this.camera),this.raycaster.intersectObjects(this.objects,!0,this.intersections),this.intersections.length>0){const e=this.intersections[0].object;this.plane.setFromNormalAndCoplanarPoint(this.camera.getWorldDirection(this.plane.normal),this.worldPosition.setFromMatrixPosition(e.matrixWorld)),this.hovered!==e&&null!==this.hovered&&(this.renderer.domElement.style.cursor="auto",this.hovered=null),this.hovered!==e&&(this.renderer.domElement.style.cursor="pointer",this.hovered=e)}else null!==this.hovered&&(this.renderer.domElement.style.cursor="auto",this.hovered=null)}onPointerDown(e){this.hovered&&(this.selected=this.hovered)}clickView(){"Top"==this.btnViewText?(this.btnViewText="Iso",this.viewTop()):(this.btnViewText="Top",this.viewIso())}onSaveCell(e){}onSaveAsset(e){}addAsset(e){}};E=(0,r.gn)([(0,s.MoW)(n),(0,W.f3)(W.Rp),(0,r.w6)("design:paramtypes",[Object])],E)}}]);