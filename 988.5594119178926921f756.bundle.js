"use strict";(self.webpackChunkJolteon=self.webpackChunkJolteon||[]).push([[988],{6027:(e,t,n)=>{n.d(t,{Z:()=>l});var s=n(8081),i=n.n(s),a=n(3645),o=n.n(a)()(i());o.push([e.id,".effectlist {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n}\n.effectlist effect {\n  margin-top: 10px;\n}\n.effectlist effect:not(:last-child) {\n  margin-bottom: 10px;\n}\n.effectlist effect {\n  box-shadow: var(--shadow) 4px 4px 4px;\n  padding: 10px;\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--accent1);\n  border-radius: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n}\n.effectlist effect .effectSection:not(:first-child) {\n  margin-top: 10px;\n}\n.effectlist effect ul {\n  list-style: none;\n}\n.effectlist effect h6 {\n  border-bottom: 1px solid rgba(255, 255, 255, 0.15);\n}\n.effectlist effect .effecttitle {\n  display: flex;\n}\n.effectlist effect .effecttitle .effecttitletitle {\n  display: flex;\n  flex-grow: 1;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.3);\n  margin-bottom: 8px;\n}\n.effectlist effect .effecttitle .effecttitletitle h5 {\n  word-wrap: normal;\n  color: var(--front0);\n  padding-right: 8px;\n  margin-right: auto;\n  margin-bottom: 0px;\n}\n.effectlist effect .effecttitle .effecttitletitle h5:not(:first-of-type) {\n  opacity: 0.4;\n}\n.effectlist effect .effecttitle .effecttitletitle h5:last-of-type {\n  flex-grow: 1;\n}\n.effectlist effect .effecttitle .effecttitletitle:hover > h5 {\n  color: var(--accent0);\n}\n.effectlist effect .effecttitle button {\n  margin-left: 10px;\n}\n",""]);const l=o},6485:(e,t,n)=>{n.d(t,{Z:()=>l});var s=n(8081),i=n.n(s),a=n(3645),o=n.n(a)()(i());o.push([e.id,"effect-model-selector input {\n  display: block;\n  height: 45px;\n  margin: 10px;\n  width: calc(100% - 20px);\n}\n.schemalist {\n  display: flex;\n  flex-wrap: wrap;\n  margin: 10px;\n  box-sizing: border-box;\n  border-top: 1px dashed rgba(255, 255, 255, 0.3);\n}\n.schema {\n  cursor: pointer;\n  margin: 10px;\n  padding: 8px;\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--accent1);\n  border-radius: 5px;\n  width: calc(25% - 20px);\n  height: 135px;\n}\n.schema h6 {\n  word-wrap: break-word;\n  padding-bottom: 4px;\n  border-bottom: 1px dashed rgba(255, 255, 255, 0.3);\n}\n.schema ul {\n  list-style: none;\n}\n.schema:hover {\n  border-color: var(--accent0);\n}\n",""]);const l=o},7897:(e,t,n)=>{n.d(t,{Z:()=>l});var s=n(8081),i=n.n(s),a=n(3645),o=n.n(a)()(i());o.push([e.id,"propertygrid .property {\n  padding: 4px;\n}\n",""]);const l=o},6950:(e,t,n)=>{n.d(t,{Z:()=>l});var s=n(8081),i=n.n(s),a=n(3645),o=n.n(a)()(i());o.push([e.id,"creature {\n  display: block;\n}\ncreature h3 {\n  border-bottom: 1px solid #58585885;\n}\ncreature .titleSpacer {\n  margin-top: 20px;\n}\nspelllist .list {\n  display: flex;\n  flex-flow: row wrap;\n}\nspelllist .list spell {\n  cursor: pointer;\n  display: flex;\n  position: relative;\n  height: 70px;\n  flex-basis: 150px;\n  margin: 8px;\n  box-shadow: 3px 3px 4px var(--shadow);\n  word-wrap: break-word;\n}\nspelllist .list spell h4 {\n  color: var(--accent1);\n}\nspelllist .list spell .title {\n  padding: 8px 30px;\n  height: 100%;\n  width: 100%;\n  border: 1px solid var(--accent1);\n  border-radius: 5px;\n}\nspelllist .list spell .titleSearch {\n  border-top-left-radius: 0px;\n  border-bottom-left-radius: 0px;\n}\nspelllist .list spell .close {\n  padding: 0px;\n  height: 50%;\n  border: 1px solid var(--accent1);\n  border-radius: 5px;\n  border-top-left-radius: 0px;\n  border-bottom-right-radius: 0px;\n  position: absolute;\n  right: 0px;\n  width: 32px;\n}\nspelllist .list spell .title:hover + .close {\n  display: none;\n}\nspelllist .list spell .add {\n  line-height: 65px;\n  padding: 0px 8px;\n  color: var(--front1);\n  background-color: var(--accent1);\n  border: 1px solid var(--accent1);\n  border-radius: 5px;\n  border-right-width: 0px;\n  border-top-right-radius: 0px;\n  border-bottom-right-radius: 0px;\n}\n",""]);const l=o},4929:(e,t,n)=>{n.d(t,{Z:()=>l});var s=n(8081),i=n.n(s),a=n(3645),o=n.n(a)()(i());o.push([e.id,"",""]);const l=o},6674:(e,t,n)=>{n.d(t,{Z:()=>l});var s=n(8081),i=n.n(s),a=n(3645),o=n.n(a)()(i());o.push([e.id,"",""]);const l=o},4133:(e,t,n)=>{n.d(t,{Z:()=>l});var s=n(8081),i=n.n(s),a=n(3645),o=n.n(a)()(i());o.push([e.id,"",""]);const l=o},1580:(e,t,n)=>{n.d(t,{Z:()=>l});var s=n(8081),i=n.n(s),a=n(3645),o=n.n(a)()(i());o.push([e.id,"tablebool {\n  width: 100%;\n}\ntablebool input {\n  width: 110px;\n}\n",""]);const l=o},651:(e,t,n)=>{n.d(t,{Z:()=>l});var s=n(8081),i=n.n(s),a=n(3645),o=n.n(a)()(i());o.push([e.id,"tablesimple {\n  width: 100%;\n}\ntablesimple input {\n  width: 110px;\n}\n",""]);const l=o},2944:(e,t,n)=>{n.d(t,{Z:()=>l});var s=n(8081),i=n.n(s),a=n(3645),o=n.n(a)()(i());o.push([e.id,"zone td {\n  padding-right: 8px;\n}\n",""]);const l=o},6892:(e,t,n)=>{n.d(t,{K:()=>i});var s=n(1804);class i extends s.e{getAll(e={}){return this.request(Object.assign({path:"/api/models/spell/all",method:"GET",format:"json"},e))}getList(e,t={}){return this.request(Object.assign({path:"/api/models/spell/list",method:"GET",query:e,format:"json"},t))}getFiltered(e,t={}){return this.request(Object.assign({path:"/api/models/spell/filtered",method:"GET",body:e,type:s.z.Json,format:"json"},t))}getByString(e,t={}){return this.request(Object.assign({path:`/api/models/spell/byString/${e}`,method:"GET",format:"json"},t))}getSpell(e,t={}){return this.request(Object.assign({path:`/api/models/spell/${e}`,method:"GET",format:"json"},t))}putSpell(e,t,n={}){return this.request(Object.assign({path:`/api/models/spell/${e}`,method:"PUT",body:t,type:s.z.Json,format:"json"},n))}deleteSpell(e,t={}){return this.request(Object.assign({path:`/api/models/spell/${e}`,method:"DELETE",format:"json"},t))}postNew(e={}){return this.request(Object.assign({path:"/api/models/spell/new",method:"POST",format:"json"},e))}postEffect(e,t,n={}){return this.request(Object.assign({path:`/api/models/spell/${e}/effect`,method:"POST",query:t,format:"json"},n))}}},2074:(e,t,n)=>{n.d(t,{s:()=>i});var s=n(1804);class i extends s.e{getAll(e={}){return this.request(Object.assign({path:"/api/models/stats/all",method:"GET",format:"json"},e))}getFiltered(e,t={}){return this.request(Object.assign({path:"/api/models/stats/filtered",method:"GET",body:e,type:s.z.Json,format:"json"},t))}getStats(e,t={}){return this.request(Object.assign({path:`/api/models/stats/${e}`,method:"GET",format:"json"},t))}putStats(e,t,n={}){return this.request(Object.assign({path:`/api/models/stats/${e}`,method:"PUT",body:t,type:s.z.Json,format:"json"},n))}deleteStats(e,t={}){return this.request(Object.assign({path:`/api/models/stats/${e}`,method:"DELETE",format:"json"},t))}postStat(e,t={}){return this.request(Object.assign({path:"/api/models/stats/stat",method:"POST",query:e,format:"json"},t))}putBool(e,t,n={}){return this.request(Object.assign({path:`/api/models/stats/${e}/bool`,method:"PUT",body:t,type:s.z.Json,format:"json"},n))}putSimple(e,t,n={}){return this.request(Object.assign({path:`/api/models/stats/${e}/simple`,method:"PUT",body:t,type:s.z.Json,format:"json"},n))}}},9988:(e,t,n)=>{n.r(t),n.d(t,{Spell:()=>ct});var s={};n.r(s),n.d(s,{default:()=>_,dependencies:()=>W,name:()=>G,register:()=>V,template:()=>B});var i={};n.r(i),n.d(i,{SpellStats:()=>K});var a={};n.r(a),n.d(a,{default:()=>ne,dependencies:()=>se,name:()=>ee,register:()=>ae,template:()=>te});var o={};n.r(o),n.d(o,{EffectModelSelector:()=>le});var l={};n.r(l),n.d(l,{default:()=>ge,dependencies:()=>ue,name:()=>be,register:()=>ye,template:()=>fe});var d={};n.r(d),n.d(d,{Zone:()=>ke});var r={};n.r(r),n.d(r,{default:()=>Ce,dependencies:()=>Oe,name:()=>Ee,register:()=>Te,template:()=>$e});var c={};n.r(c),n.d(c,{Statpropertyselector:()=>Ie});var p={};n.r(p),n.d(p,{default:()=>Ue,dependencies:()=>Ze,name:()=>ze,register:()=>Ne,template:()=>Me});var h={};n.r(h),n.d(h,{Statsmini:()=>Ae});var m={};n.r(m),n.d(m,{default:()=>Pe,dependencies:()=>Re,name:()=>Je,register:()=>Be,template:()=>De});var b={};n.r(b),n.d(b,{default:()=>We});var f={};n.r(f),n.d(f,{default:()=>Le,dependencies:()=>He,name:()=>Fe,register:()=>Ke,template:()=>Ve});var g={};n.r(g),n.d(g,{Effect:()=>tt});var u={};n.r(u),n.d(u,{default:()=>it,dependencies:()=>at,name:()=>nt,register:()=>lt,template:()=>st});var v=n(655),y=n(1542),x=n(3379),k=n.n(x),w=n(7795),S=n.n(w),E=n(569),$=n.n(E),C=n(3565),O=n.n(C),j=n(9216),T=n.n(j),I=n(4589),z=n.n(I),M=n(6950),U={};U.styleTagTransform=z(),U.setAttributes=O(),U.insert=$().bind(null,"head"),U.domAPI=S(),U.insertStyleElement=T(),k()(M.Z,U),M.Z&&M.Z.locals&&M.Z.locals;var Z=n(1478),q=n(6726),N=n(4133),A={};A.styleTagTransform=z(),A.setAttributes=O(),A.insert=$().bind(null,"head"),A.domAPI=S(),A.insertStyleElement=T(),k()(N.Z,A),N.Z&&N.Z.locals&&N.Z.locals;var J=n(7694),D=n(8729),P=n(5587),R=n(842);const G="spellstats",B='\n\n\n\n\n\n<tablesimple characs.bind="Characteristics.spellModels" base.bind="base" hasheader.bind="false"></tablesimple>\n',_=B,W=[J,D,P,R];let F;function V(e){F||(F=y.b_N.define({name:G,template:B,dependencies:W})),e.register(F)}var L=n(9344),H=n(2074),Y=n(2052);n(1932);let K=class{constructor(e,t){this.ea=e,this.statsController=t,this.Characteristics=Y.Mt,this.base=null,e.subscribe("stat:base:change",(e=>{this.postUpdate(this.base,e)}))}binding(){this.statsController.getStats(this.baseuid).then((e=>this.base=e.data))}async postUpdate(e,t){const n=parseInt(t.value.toString(),10);let s;s=isNaN(n)?this.statsController.putBool(e.entityUid,t):this.statsController.putSimple(e.entityUid,t);try{(await s).data.matchedCount>0?this.ea.publish("operation:saved"):this.ea.publish("operation:failed")}catch(e){this.ea.publish("operation:failed")}}};(0,v.gn)([y.ExJ,(0,v.w6)("design:type",String)],K.prototype,"baseuid",void 0),K=(0,v.gn)([(0,y.MoW)(s),(0,L.f3)(L.Rp,H.s),(0,v.w6)("design:paramtypes",[Object,H.s])],K);var X=n(6485),Q={};Q.styleTagTransform=z(),Q.setAttributes=O(),Q.insert=$().bind(null,"head"),Q.domAPI=S(),Q.insertStyleElement=T(),k()(X.Z,Q),X.Z&&X.Z.locals&&X.Z.locals;const ee="effect-model-selector",te='\n<input type="string" value.bind="filter" keyup.trigger="search()" placeholder="search.." />\n\n<div class="schemalist" if.bind="schemasDescriptions">\n\n  <div class="schema" repeat.for="schema of filteredSchemas" click.trigger="clickEffectModel(schema)" data-bs-dismiss="modal">\n    <h6>${schema.name}</h6>\n    <div if.bind="len(schema) > 0">\n      <div repeat.for="prop of props(schema)">\n        ${schema.properties[prop]} ${prop}\n      </div>\n    </div>\n  </div>\n\n</div>\n\n',ne=te,se=[];let ie;function ae(e){ie||(ie=y.b_N.define({name:ee,template:te,dependencies:se})),e.register(ie)}var oe=n(2765);let le=class{constructor(e){this.propertiesController=e,this.onselectcallback=e=>{},this.filter="",this.schemasDescriptions=[],this.filteredSchemas=[],this.schemasDescriptions=Y.zt.schemas,this.filteredSchemas=Y.zt.schemas}len(e){return Object.keys(e.properties).length}strin(e){return JSON.stringify(e.properties)}props(e){return Object.keys(e.properties).filter((e=>"$type"!=e))}search(){let e=this.filter;e||(this.filteredSchemas=this.schemasDescriptions),e=e.toLowerCase(),this.filteredSchemas=this.schemasDescriptions.filter((t=>!!t.name.toLowerCase().includes(e)||!!this.props(t).some((t=>t.toLowerCase().includes(e)))||!!this.props(t).some((n=>t.properties[n].toLowerCase().includes(e)))||void 0))}clickEffectModel(e){this.onselectcallback(e)}};(0,v.gn)([y.ExJ,(0,v.w6)("design:type",Object)],le.prototype,"onselectcallback",void 0),le=(0,v.gn)([(0,y.MoW)(a),(0,L.f3)(oe.i),(0,v.w6)("design:paramtypes",[oe.i])],le);var de=n(6027),re={};re.styleTagTransform=z(),re.setAttributes=O(),re.insert=$().bind(null,"head"),re.domAPI=S(),re.insertStyleElement=T(),k()(de.Z,re),de.Z&&de.Z.locals&&de.Z.locals;var ce=n(7897),pe={};pe.styleTagTransform=z(),pe.setAttributes=O(),pe.insert=$().bind(null,"head"),pe.domAPI=S(),pe.insertStyleElement=T(),k()(ce.Z,pe),ce.Z&&ce.Z.locals&&ce.Z.locals;var he=n(2944),me={};me.styleTagTransform=z(),me.setAttributes=O(),me.insert=$().bind(null,"head"),me.domAPI=S(),me.insertStyleElement=T(),k()(he.Z,me),he.Z&&he.Z.locals&&he.Z.locals;const be="zone",fe='<table class="effecttable" if.bind="zone">\n  <tbody>\n    <tr>\n      <td>\n        Type\n        \x3c!-- ${zone.zoneType.value} --\x3e\n      </td>\n      <td>\n        <select value.bind="zone.zoneType.value" change.trigger="save()">\n          <option repeat.for="type of Enums.zoneTypes" model.bind="$index">${type}</option>\n        </select>\n      </td>\n    </tr>\n    <tr if.bind="zone.zoneType.value && zone.zoneType.value !== 0">\n      <td>Size</td>\n      <td>\n        <div class="d-flex gap-1">\n          <div class="input-group">\n            <span class="input-group-text" id="basic-addon1">x</span>\n            <input class="input-group-input" type="number" aria-describedby="basic-addon1" value.bind="zone.size.value.x" change.trigger="save()">\n          </div>\n          <div if.bind="zoneSizeHasZ()" class="input-group">\n            <span class="input-group-text" id="basic-addon3">z</span>\n            <input class="input-group-input" type="number" aria-describedby="basic-addon3" value.bind="zone.size.value.z" change.trigger="save()">\n          </div>\n          <div if.bind="zoneSizeHasY()" class="input-group">\n            <span class="input-group-text" id="basic-addon2">y</span>\n            <input class="input-group-input" type="number" aria-describedby="basic-addon2" value.bind="zone.size.value.y" change.trigger="save()">\n          </div>\n        </div>\n      </td>\n    </tr>\n\n    \x3c!-- <tr class="collapse" id="collapseZone-${uid}"> --\x3e\n    <tr>\n      <td>World Origin</td>\n      <td>\n        <select value.bind="zone.worldOrigin" change.trigger="save()">\n          <option repeat.for="type of Enums.actorTypes" model.bind="$index">${type}</option>\n        </select>\n      </td>\n    </tr>\n\n    <tr class="collapse" id="collapseZone-${uid}">\n      <td>World Offset</td>\n      <td>\n        <div class="d-flex gap-1">\n          <input type="number" value.bind="zone.worldOffset.x" change.trigger="save()" />\n          <input type="number" value.bind="zone.worldOffset.z" change.trigger="save()" />\n        </div>\n      </td>\n    </tr>\n\n    <tr class="collapse" id="collapseZone-${uid}">\n      <td>Local Origin</td>\n      <td>\n        <select value.bind="zone.localOrigin" change.trigger="save()">\n          <option repeat.for="type of Enums.direction9" model.bind="$index">${type}</option>\n        </select>\n      </td>\n    </tr>\n\n    <tr class="collapse" id="collapseZone-${uid}">\n      <td>Rotation</td>\n      <td>\n        <select value.bind="zone.rotation" change.trigger="save()">\n          <option repeat.for="type of Enums.rotation4" model.bind="$index">${type}</option>\n        </select>\n      </td>\n    </tr>\n    \n    <tr class="collapse" id="collapseZone-${uid}">\n      <td>Sampling Count</td>\n      <td>\n        <input type="number" value.bind="zone.maxSampleCount" change.trigger="save()" />\n      </td>\n    </tr>\n    <tr class="collapse" id="collapseZone-${uid}">\n      <td>Sampling</td>\n      <td>\n        <select value.bind="zone.samplingType" change.trigger="save()">\n          <option repeat.for="type of Enums.samplingTypes" model.bind="$index">${type}</option>\n        </select>\n      </td>\n    </tr>\n    \n\x3c!-- \n  TODO: \n  - bool negative,  \n  - bool canRotate,\n  - list<zone> children\n--\x3e\n\n  </tbody>\n</table>\n',ge=fe,ue=[];let ve;function ye(e){ve||(ve=y.b_N.define({name:be,template:fe,dependencies:ue})),e.register(ve)}var xe=n(5367);let ke=class{constructor(){this.Enums=Y.Yb,this.callbacksave=()=>{},this.minimized=!0}bound(){}zoneSizeHasZ(){return[xe.Ak.cross,xe.Ak.xcross,xe.Ak.star,xe.Ak.crossHalf,xe.Ak.xcrossHalf,xe.Ak.rectangle,xe.Ak.ellipse,xe.Ak.ellipseHalf].includes(this.zone.zoneType.value)}zoneSizeHasY(){return!1}save(){console.log("uhuh"),this.callbacksave()}clickMinimize(){this.minimized=!this.minimized}};(0,v.gn)([y.ExJ,(0,v.w6)("design:type",Object)],ke.prototype,"zone",void 0),(0,v.gn)([y.ExJ,(0,v.w6)("design:type",String)],ke.prototype,"uid",void 0),(0,v.gn)([y.ExJ,(0,v.w6)("design:type",Object)],ke.prototype,"callbacksave",void 0),ke=(0,v.gn)([(0,y.MoW)(Object.assign(Object.assign({},l),{name:"zone"}))],ke);var we=n(6674),Se={};Se.styleTagTransform=z(),Se.setAttributes=O(),Se.insert=$().bind(null,"head"),Se.domAPI=S(),Se.insertStyleElement=T(),k()(we.Z,Se),we.Z&&we.Z.locals&&we.Z.locals;const Ee="statpropertyselector",$e='\n\x3c!-- <input type="string" value.bind="filter" keyup.trigger="search()" placeholder="search.." /> --\x3e\n\n\x3c!-- <div class="schemalist" if.bind="schemasDescriptions">\n  <div class="schema" repeat.for="schema of filteredSchemas" click.trigger="clickEffectModel(schema)" data-bs-dismiss="modal">\n    <h6>${schema.name}</h6>\n    <div if.bind="len(schema) > 0">\n      <div repeat.for="prop of props(schema)">\n        ${schema.properties[prop]} ${prop}\n      </div>\n    </div>\n  </div>\n</div> --\x3e\n\n\x3c!-- ${Characteristics.sectioned} --\x3e\n<div repeat.for="type of Characteristics.sectioned">\n    \x3c!-- ${type} --\x3e\n    <h6>${getSectionName(type)}</h6>\n    <div class="schemalist">\n      <div class="btn btn-outline" style="margin: 5px;" repeat.for="property of type" click.trigger="clickCharacteristic(property)" data-bs-dismiss="modal">\n          ${property.baseName}: ${getValueType(property)}\n      </div>\n    </div>\n</div>\n\n\x3c!-- resources --\x3e\n\x3c!-- affinities --\x3e\n\x3c!-- resistances --\x3e\n\x3c!-- other --\x3e\n\x3c!-- state --\x3e\n\n\x3c!-- contextuals --\x3e\n\x3c!-- statuscontainer --\x3e\n\x3c!-- statusinstance --\x3e\n\x3c!-- spellmodel --\x3e\n\x3c!-- spell --\x3e\n',Ce=$e,Oe=[];let je;function Te(e){je||(je=y.b_N.define({name:Ee,template:$e,dependencies:Oe})),e.register(je)}let Ie=class{constructor(){this.Characteristics=Y.Mt,this.callbackselect=e=>{}}clickCharacteristic(e){this.callbackselect(e)}getSectionName(e){return e[0].nameModelUid.split(".")[1]}getValueType(e){let t=e.statValueType;return xe.$t[t]}};(0,v.gn)([y.ExJ,(0,v.w6)("design:type",Object)],Ie.prototype,"callbackselect",void 0),Ie=(0,v.gn)([(0,y.MoW)(r),(0,v.w6)("design:paramtypes",[])],Ie);const ze="statsmini",Me='\n\n\n\n\n\n<button class="btn btn-outline btn-icon" data-bs-toggle="modal" data-bs-target="#statSelector-${stats.entityUid}">+</button>\n\n<modal if.bind="stats" id="statSelector-${stats.entityUid}" header="Add Stat" close.bind=false footer.bind=false>\n  <statpropertyselector callbackselect.bind="s => onAddStat(s)"></statpropertyselector>\n</modal>\n\n<table class="table-striped table-sm table-borderless table-responsive-sm" if.bind="stats">\n  <tbody>\n    <tr repeat.for="stat of getDicValues()">\n      <td>${getCharacName(stat.statId)}</td>\n      <td if.bind="isSimple(stat)">\n        <input type="number" value.bind="stat.value" change.trigger="onChangeStatValue" />\n      </td>\n      <td if.bind="isBool(stat)">\n        <input type="checkbox" class="btn-check" id="btn-check-outlined ${stat.statId}" autocomplete="off" checked.bind="stat.value" change.trigger="onChangeStatValue">\n        <label class="btn btn-outline shadow-none" for="btn-check-outlined ${stat.statId}">${stat.value ? \'True\' : \'False\'}</label><br>\n      </td>\n      <td>\n        <button class="btn btn-outline btn-icon" click.trigger="clickRemoveStat(stat)">x</button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n',Ue=Me,Ze=[c,o,Z];let qe;function Ne(e){qe||(qe=y.b_N.define({name:ze,template:Me,dependencies:Ze})),e.register(qe)}let Ae=class{constructor(e){this.statsController=e,this.Enums=Y.Yb,this.callbacksavestat=()=>{}}binding(){}getDicValues(){return Object.values(this.stats.dic)}getGrowthValues(){return Object.values(this.stats.growth)}getCharacName(e){return Y.Mt.getCharac(e).baseName}getCharacType(e){return Y.Mt.getCharac(e)}isSimple(e){if(e)return this.getCharacType(e.statId).statValueType==xe.$t.Simple}isBool(e){if(e)return this.getCharacType(e.statId).statValueType==xe.$t.Bool}onChangeStatValue(){this.callbacksavestat()}clickRemoveStat(e){delete this.stats.dic[e.statId],this.callbacksavestat()}onAddStat(e){this.statsController.postStat({characID:e.id}).then((e=>{this.stats.dic[e.data.statId]=e.data,this.callbacksavestat()}))}};(0,v.gn)([y.ExJ,(0,v.w6)("design:type",Object)],Ae.prototype,"stats",void 0),(0,v.gn)([y.ExJ,(0,v.w6)("design:type",Object)],Ae.prototype,"callbacksavestat",void 0),Ae=(0,v.gn)([(0,y.MoW)(p),(0,L.f3)(H.s),(0,v.w6)("design:paramtypes",[H.s])],Ae);const Je="propertygrid",De='\n\n\n\n\n<div if.bind="data && schema">\n  \x3c!-- hi prop grid --\x3e\n\n  <table>\n    <tbody>\n      <tr class="property" repeat.for="prop of keys">\n        <td style="padding-right: 8px; color: var(--accent2);" data-bs-toggle="collapse" data-bs-target="#collapseZone-${uid}-schema">\n          ${prop}: \n        </td>\n        <td>\n          <template switch.bind="propName(prop)">\n      \n            <zone uid="${uid}-schema" case="IZone" zone.bind="data[prop]" callbacksave.bind="() => onChange()"></zone>\n      \n            <select case=\'ElementType\' value.bind="data[prop]" change.trigger="onChange()">\n              <option repeat.for="ele of Enums.elements" model.bind="$index">${ele}</option>\n            </select>\n      \n            <select case=\'ActorType\' value.bind="data[prop]" change.trigger="onChange()">\n              <option repeat.for="act of Enums.actors" model.bind="$index">${act}</option>\n            </select>\n      \n            <statsmini case="CreatureStats" type="CreatureStats" stats.bind="data[prop]" callbacksavestat.bind="() => onChange()"></statsmini>\n            <statsmini case="StatusModelStats" type="StatusModelStats" stats.bind="data[prop]" callbacksavestat.bind="() =>onChange()"></statsmini>\n            <statsmini case="SpellModelStats" type="SpellModelStats" stats.bind="data[prop]" callbacksavestat.bind="() =>onChange()"></statsmini>\n            <statsmini case="SpellStats" type="SpellStats" stats.bind="data[prop]" callbacksavestat.bind="() => onChange()"></statsmini>\n\n\n            \x3c!-- stat : select charac id + value --\x3e\n            \x3c!-- charac id selector --\x3e\n            \x3c!-- iid selector:  string, creature(summon), spell, status, animation, scene/model asset  --\x3e\n            <input case="StringIID" type="text" value.bind="data[prop]" change.trigger="onChange()"/>\n            <input case="CreatureIID" type="text" value.bind="data[prop]" change.trigger="onChange()"/>\n            <input case="SpellIID" type="text" value.bind="data[prop]" change.trigger="onChange()"/>\n            <input case="StatusIID" type="text" value.bind="data[prop]" change.trigger="onChange()"/>\n            <input case="AssetIID" type="text" value.bind="data[prop]" change.trigger="onChange()"/>\n            <input case="AnimationSetIID" type="text" value.bind="data[prop]" change.trigger="onChange()"/>\n      \n            <template default-case switch.bind="typof(prop)">\n              <input case="number" type="number" value.bind="data[prop]"  change.trigger="onChange()"/>\n              \x3c!-- <div case="string"> --\x3e\n                \x3c!-- who even has a string property --\x3e\n                \x3c!-- and more like a string selector than a string component --\x3e\n                \x3c!-- stringcomponent (StringEntity?) --\x3e\n              \x3c!-- </div> --\x3e\n              <div case="boolean">\n                {bool}\n                \x3c!-- toggle button --\x3e\n                  <div style="margin: 5px;">\n                      <input type="checkbox" class="btn-check" id="btn-check-outlined ${prop}" autocomplete="off" checked.bind="data[prop]" change.trigger="onChange()">\n                      \x3c!-- change.trigger="onChangeBase" --\x3e\n                      <label class="btn btn-outline shadow-none" for="btn-check-outlined ${prop}">${characName}</label><br>\n                  </div>\n              </div>\n      \n            </template>\n          </template>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n\n</div>\n',Pe=De,Re=[d,q,h,c];let Ge;function Be(e){Ge||(Ge=y.b_N.define({name:Je,template:De,dependencies:Re})),e.register(Ge)}let _e=class{constructor(){this.Enums=Y.Yb,this.callbacksave=()=>{}}get keys(){return Object.keys(this.data).filter((e=>"$type"!=e))}get values(){return Object.values(this.data)}typof(e){return typeof this.data[e]}propName(e){return this.schema.properties[e]}onChange(){this.callbacksave()}};(0,v.gn)([y.ExJ,(0,v.w6)("design:type",Object)],_e.prototype,"data",void 0),(0,v.gn)([y.ExJ,(0,v.w6)("design:type",Object)],_e.prototype,"schema",void 0),(0,v.gn)([y.ExJ,(0,v.w6)("design:type",String)],_e.prototype,"uid",void 0),(0,v.gn)([y.ExJ,(0,v.w6)("design:type",Object)],_e.prototype,"callbacksave",void 0),_e=(0,v.gn)([(0,y.MoW)(m),(0,v.w6)("design:paramtypes",[])],_e);const We=_e,Fe="effect",Ve='\n\n\n\n\n<div if.bind="model">\n\n  <div class="effecttitle">\n    \x3c!-- title --\x3e\n    <div class="effecttitletitle clickable"  data-bs-toggle="collapse" data-bs-target="#collapseEffectContent-${model.entityUid}">\n      <h5 click.trigger="clickMinimize()">${getModelName()}</h5>\n      <h5 click.trigger="clickMinimize()">(${model.effectIds.length})</h5>\n      <h5 click.trigger="clickMinimize()">${model.entityUid}</h5>\n    </div>\n    <button class="btn btn-outline" click.trigger="clickMoveUp()">^</button>\n    <button class="btn btn-outline" click.trigger="clickMoveDown()">v</button>\n    \x3c!-- delete & confirm --\x3e\n    <button class="btn btn-outline" data-bs-toggle="modal" data-bs-target="#removeEffectModal-${model.entityUid}">x</button>\n    <modal id="removeEffectModal-${model.entityUid}" header="Remove effect?" close.bind=false footer.bind=true callbackok.bind="() => clickRemove()">\n      Confirm remove ${getModelName()}?\n    </modal>\n\n  </div>\n\n  \x3c!-- content --\x3e\n  \x3c!--  if.bind="!minimized" --\x3e\n  <div class="collapse show" id="collapseEffectContent-${model.entityUid}">\n\n    \x3c!-- properties section --\x3e\n    <div class="effectSection d-flex">\n      <div class="eblock" style="margin-right: 15px;">\n        <h6 class="clickable" data-bs-toggle="collapse" data-bs-target="#collapseZone-${model.entityUid}">\n          \x3c!-- click.trigger="clickMinimize()"  --\x3e\n          Zone\n        </h6>\n        <zone zone.bind="model.targetAcquisitionZone" uid.bind="model.entityUid" callbacksave.bind="() => onSave()"></zone>\n      </div>\n\n      <div style="margin-right: 15px;">\n        <h6>Caster Condition</h6>\n        <div>\n          <h6>Target Filter</h6>\n        </div>\n      </div>\n\n      <div class="eblock" style="flex-grow: 1;">\n        <h6>Schema</h6>\n        <propertygrid data.bind="model.schema" schema.bind="schema" uid.bind="model.entityUid" callbacksave.bind="() => onSave()"></propertygrid>\n      </div>\n    </div>\n\n    \x3c!-- children section --\x3e\n    <div class="effectSection">\n      <h6 class="clickable" data-bs-toggle="collapse" data-bs-target="#collapseEffects-${model.entityUid}">\n        Effects \n        \x3c!-- (${model.effectIds.length}) --\x3e\n      </h6>\n      <button class="btn" data-bs-toggle="modal" data-bs-target="#effectChildModal-${model.entityUid}">+</button>\n      <modal id="effectChildModal-${model.entityUid}" header="Add Effect Child" close.bind=false footer.bind=false>\n        <effect-model-selector onselectcallback.bind="e => onAddChild(e)"></effect-model-selector>\n      </modal>\n\n      <div class="effectlist collapse show" id="collapseEffects-${model.entityUid}">\n        <effect repeat.for="effectid of model.effectIds" uid.bind="effectid" callbackmoveup.bind="e => onMoveEffectUp(e)" callbackmovedown.bind="e => onMoveEffectDown(e)" callbackremove.bind="e => onRemoveEffect(e)"></effect>\n      </div>\n    </div>\n\n\n\n  </div>\n\n</div>\n\n\x3c!-- modelUid --\x3e\n\x3c!-- model name --\x3e\n\x3c!-- model desc --\x3e\n\x3c!-- model BoardTargetType --\x3e\n\x3c!-- model propertySchemaType => property names --\x3e\n\n\x3c!-- zone --\x3e\n\x3c!-- conditions target --\x3e\n\x3c!-- conditions caster --\x3e\n\x3c!-- triggers --\x3e\n',Le=Ve,He=[b,Z,o,d];let Ye;function Ke(e){Ye||(Ye=y.b_N.define({name:Fe,template:Ve,dependencies:He})),e.register(Ye)}var Xe=n(9561),Qe=n(1804);class et extends Qe.e{getAll(e={}){return this.request(Object.assign({path:"/api/models/effect/all",method:"GET",format:"json"},e))}getEffect(e,t={}){return this.request(Object.assign({path:`/api/models/effect/${e}`,method:"GET",format:"json"},t))}putEffect(e,t,n={}){return this.request(Object.assign({path:`/api/models/effect/${e}`,method:"PUT",body:t,type:Qe.z.Json,format:"json"},n))}deleteEffect(e,t={}){return this.request(Object.assign({path:`/api/models/effect/${e}`,method:"DELETE",format:"json"},t))}postNew(e,t={}){return this.request(Object.assign({path:"/api/models/effect/new",method:"POST",query:e,format:"json"},t))}postChild(e,t,n={}){return this.request(Object.assign({path:`/api/models/effect/${e}/child`,method:"POST",query:t,format:"json"},n))}}let tt=class{constructor(e,t,n,s){this.ea=e,this.router=t,this.effectController=n,this.propertiesController=s,this.callbackmoveup=e=>{},this.callbackmovedown=e=>{},this.callbackremove=e=>{},this.minimized=!1}binding(){this.effectController.getEffect(this.uid).then((e=>{this.model=e.data,this.schema=Y.zt.schemas.find((e=>e.name==this.getModelName()))}),(e=>{console.log(e)}))}getModelName(){let e=+this.model.modelUid;return xe.JN[e].toString()}clickMinimize(){this.minimized=!this.minimized}clickMoveUp(){this.callbackmoveup(this.model)}clickMoveDown(){this.callbackmovedown(this.model)}clickRemove(){console.log("Effect.remove: "+this.model.entityUid),this.callbackremove(this.model)}onMoveEffectUp(e){let t=this.model.effectIds.indexOf(e.entityUid);this.model.effectIds.splice(t,1),this.model.effectIds.splice(t-1,0,e.entityUid),this.effectController.putEffect(this.model.entityUid,this.model).then((e=>this.model=e.data))}onMoveEffectDown(e){let t=this.model.effectIds.indexOf(e.entityUid);this.model.effectIds.splice(t,1),this.model.effectIds.splice(t+1,0,e.entityUid),this.effectController.putEffect(this.model.entityUid,this.model).then((e=>this.model=e.data))}onRemoveEffect(e){console.log("Effect remove eff: "+e.entityUid);let t=this.model.effectIds.indexOf(e.entityUid);this.model.effectIds.splice(t,1),this.effectController.putEffect(this.model.entityUid,this.model).then((t=>{this.model=t.data,this.effectController.deleteEffect(e.entityUid)}))}onAddChild(e){console.log("add child to: "+this.model.entityUid),this.effectController.postChild(this.model.entityUid,{schemaName:e.name}).then((e=>{this.model=e.data,console.log("effect addChild result: "+JSON.stringify(this.model.effectIds))}))}onSave(){this.effectController.putEffect(this.model.entityUid,this.model).then((e=>{this.model=e.data,this.ea.publish("operation:saved")}),(e=>{this.ea.publish("operation:failed")}))}};(0,v.gn)([y.ExJ,(0,v.w6)("design:type",String)],tt.prototype,"uid",void 0),(0,v.gn)([y.ExJ,(0,v.w6)("design:type",Object)],tt.prototype,"callbackmoveup",void 0),(0,v.gn)([y.ExJ,(0,v.w6)("design:type",Object)],tt.prototype,"callbackmovedown",void 0),(0,v.gn)([y.ExJ,(0,v.w6)("design:type",Object)],tt.prototype,"callbackremove",void 0),tt=(0,v.gn)([(0,y.MoW)(f),(0,L.f3)(L.Rp,Xe.v5),(0,v.w6)("design:paramtypes",[Object,Object,et,oe.i])],tt);const nt="spell",st='\n\n\n\n\n\n\n\x3c!-- vignette root || creature --\x3e\n<template if.bind="isvignette && mode != \'search\'">\n  \x3c!-- <a href="/editor/spell/{model.modelUid}"> --\x3e\n  <button class="btn title btn-outline" click.trigger="clickSpell()">\n    <stringcomponent view-model.ref="name" uid.bind="model.nameId" editable.bind="!isvignette"></stringcomponent>\n  </button>\n  \x3c!-- <button class="btn close" click.trigger="clickRemove()">x</button> --\x3e\n  \n  \x3c!-- delete & confirm --\x3e\n  <template if.bind="mode == \'creature\'">\n    <button class="btn close" data-bs-toggle="modal" data-bs-target="#removeSpell-${model.entityUid}">x</button>\n    <modal id="removeSpell-${model.entityUid}" header="Remove Spell?" close.bind=false footer.bind=true callbackok.bind="() => clickRemove()">\n      Confirm remove ${name.entity.value} from creature?\n    </modal>\n  </template>\n\n  <template if.bind="mode == \'root\'">\n    <button class="btn close" data-bs-toggle="modal" data-bs-target="#deleteSpell-${model.entityUid}">x</button>\n    <modal id="deleteSpell-${model.entityUid}" header="Delete Spell?" close.bind=false footer.bind=true callbackok.bind="() => clickRemove()">\n      Confirm delete ${name.entity.value} entirely?\n    </modal>\n  </template>\n</template>\n\n\x3c!-- vignette search --\x3e\n<template if.bind="isvignette && mode == \'search\'">\n  <div class="add">+</div>\n  <button class="title titleSearch btn-outline" click.trigger="clickSpell()">\n    <stringcomponent view-model.ref="name" uid.bind="model.nameId" editable.bind="!isvignette"></stringcomponent>\n  </button>\n</template>\n\n\x3c!-- full spell ui, not vignette --\x3e\n<template if.bind="!isvignette">\n  <h2>Spell #${model.modelUid}</h2>\n  <div class="d-flex">\n    <stringcomponent view-model.ref="name" uid.bind="model.nameId" editable=true></stringcomponent>\n    <stringcomponent view-model.ref="desc" uid.bind="model.descriptionId" editable=true large=true class="large"></stringcomponent>\n  </div>\n  <div>\n    <button class="btn" click.trigger="clickFileExplorer">File</button>\n    <input type="text" value.bind="model.icon" style="width: 200px;" change.trigger="save()"/>\n  </div>\n  <label class="btn" for="inputId">file dialog</label>\n  <input id="inputId" type="file" style="position: fixed; top: -100em" files.bind="iconfile" change.trigger="f => clickFileIcon(f)">\n  \x3c!-- <div>\n    ${filesStr}\n  </div> --\x3e\n\n  \x3c!-- costs + stats --\x3e\n  <div style="display: flex;">\n    <div>\n      <h4>Costs</h4>\n      <table class="table-striped table-sm table-borderless table-responsive-sm">\n        <tbody>\n          <tr repeat.for="charac of Characteristics.resourcesSpellCosts">\n            <td>${charac.baseName}</td>\n            <td><input type="number" value.bind="model.costs[charac.id]" change.trigger="onChangeCost(charac.id)" placeholder="0" /></td>\n            \x3c!-- <td>${charac.baseName} ${charac.id} ${model.costs[charac.id] || 0}</td> --\x3e\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div>\n      <h4>Stats</h4>\n      <spellstats baseuid.bind="model.statsId"></spellstats>\n    </div>\n  </div>\n\n  \x3c!-- effects --\x3e\n  <div if.bind="model">\n    <h4>Effects</h4>\n    <button class="btn" data-bs-toggle="modal" data-bs-target="#effectModelModal">Add</button>\n    <modal id="effectModelModal" header="Add Spell Effect" close.bind=false footer.bind=false>\n      <effect-model-selector onselectcallback.bind="e => addEffect(e)"></effect-model-selector>\n    </modal>\n\n    <div class="effectlist">\n      <effect repeat.for="effectid of model.effectIds" uid.bind="effectid" callbackmoveup.bind="e => onMoveEffectUp(e)" callbackmovedown.bind="e => onMoveEffectDown(e)" callbackremove.bind="e => onRemoveEffect(e)"></effect>\n    </div>\n  </div>\n\n\n</template>\n',it=st,at=[Z,q,i,o,g];let ot;function lt(e){ot||(ot=y.b_N.define({name:nt,template:st,dependencies:at})),e.register(ot)}var dt=n(6892);class rt extends Qe.e{getSkinAll(e={}){return this.request(Object.assign({path:"/api/models/spell/skin/all",method:"GET",format:"json"},e))}getSkin(e,t={}){return this.request(Object.assign({path:`/api/models/spell/skin/${e}`,method:"GET",format:"json"},t))}putSkin(e,t,n={}){return this.request(Object.assign({path:`/api/models/spell/skin/${e}`,method:"PUT",body:t,type:Qe.z.Json,format:"json"},n))}deleteSkin(e,t={}){return this.request(Object.assign({path:`/api/models/spell/skin/${e}`,method:"DELETE",format:"json"},t))}getSkin2(e,t,n={}){return this.request(Object.assign({path:`/api/models/spell/skin/${e}`,method:"GET",query:t,format:"json"},n))}postSkin(e={}){return this.request(Object.assign({path:"/api/models/spell/skin",method:"POST",format:"json"},e))}}let ct=class{constructor(e,t,n,s){this.ea=e,this.router=t,this.spellController=n,this.skinController=s,this.Characteristics=Y.Mt,this.isvignette=!1,this.mode="root",this.callbackremove=e=>{},this.callbackadd=e=>{}}binding(){}async loading(e,t,n){this.uid=e.uid;try{let e=await this.spellController.getSpell(this.uid);this.model=e.data,this.ea.publish("navcrumb:spell",{modeluid:this.model.modelUid,nameuid:this.model.nameId})}catch(e){this.router.load("editor")}}clickFileIcon(e){this.model.icon=this.iconfile[0].name,this.save()}onChangeCost(e){this.save()}clickSpell(){"root"!=this.mode&&"creature"!=this.mode||this.router.load("/editor/spell/"+this.model.modelUid),"search"==this.mode&&this.callbackadd(this.model)}async clickRemove(){this.callbackremove(this.model)}async addEffect(e){this.spellController.postEffect(this.model.modelUid,{schemaName:e.name}).then((e=>{this.model=e.data}))}async clickNewSkin(){let e=await this.skinController.postSkin();this.model.skinIds.push(e.data.entityUid),this.save()}save(){this.spellController.putSpell(this.model.modelUid,this.model).then((e=>{this.model=e.data,this.ea.publish("operation:saved")}))}onMoveEffectUp(e){let t=this.model.effectIds.indexOf(e.entityUid);-1!=t?(this.model.effectIds.splice(t,1),this.model.effectIds.splice(t-1,0,e.entityUid),this.save()):console.error("Spell.moveEffectUp: effect not found: "+JSON.stringify(e))}onMoveEffectDown(e){let t=this.model.effectIds.indexOf(e.entityUid);console.log("effect ids: "+t+", "+JSON.stringify(this.model.effectIds)),-1!=t?(this.model.effectIds.splice(t,1),this.model.effectIds.splice(t+1,0,e.entityUid),this.save()):console.error("Spell.moveEffectDown: effect not found: "+JSON.stringify(e))}onRemoveEffect(e){console.log("spell remove eff: "+e.entityUid);let t=this.model.effectIds.indexOf(e.entityUid);this.model.effectIds.splice(t,1),this.save()}};(0,v.gn)([y.ExJ,(0,v.w6)("design:type",Object)],ct.prototype,"model",void 0),(0,v.gn)([y.ExJ,(0,v.w6)("design:type",Boolean)],ct.prototype,"isvignette",void 0),(0,v.gn)([y.ExJ,(0,v.w6)("design:type",String)],ct.prototype,"mode",void 0),(0,v.gn)([y.ExJ,(0,v.w6)("design:type",Object)],ct.prototype,"callbackremove",void 0),(0,v.gn)([y.ExJ,(0,v.w6)("design:type",Object)],ct.prototype,"callbackadd",void 0),ct=(0,v.gn)([(0,y.MoW)(u),(0,L.f3)(L.Rp,Xe.v5,dt.K,rt),(0,v.w6)("design:paramtypes",[Object,Object,dt.K,rt])],ct)},1817:(e,t,n)=>{n.r(t),n.d(t,{Equation:()=>O});var s={};n.r(s),n.d(s,{default:()=>S,dependencies:()=>E,name:()=>k,register:()=>C,template:()=>w});var i=n(655),a=n(1542),o=n(3379),l=n.n(o),d=n(7795),r=n.n(d),c=n(569),p=n.n(c),h=n(3565),m=n.n(h),b=n(9216),f=n.n(b),g=n(4589),u=n.n(g),v=n(4929),y={};y.styleTagTransform=u(),y.setAttributes=m(),y.insert=p().bind(null,"head"),y.domAPI=r(),y.insertStyleElement=f(),l()(v.Z,y),v.Z&&v.Z.locals&&v.Z.locals;var x=n(1478);const k="equation",w='\n\n\n\x3c!-- the Y constant --\x3e\n<input type="number" value.bind="eq.functions[0].slopes[0]" />\n\n\x3c!-- edit button --\x3e\n<button class="btn btn-icon" data-bs-toggle="modal" data-bs-target="#equationModal-${characid}">\n  <i class="fa-regular fa-pen-to-square"></i>\n</button>\n\n\x3c!-- full equation editor --\x3e\n<modal id="equationModal-${characid}" header="Edit Growth Equation" close.bind=false footer.bind=false>\n  \x3c!-- add/delete function --\x3e\n  <div repeat.for="func of eq.functions">\n    \x3c!-- x range (turns range) --\x3e\n    <div>\n      <input type="number" value.bind="func.xFromIncluded" />\n      &lt= x &lt\n      <input type="number" value.bind="func.xToExcluded" />\n    </div>\n    \x3c!-- number of slopes (degree) --\x3e\n    <div>\n      degree: <input type="number" value.bind="func.slopes.length" change.trigger="event => changeSlopes(event, func)" />\n    </div>\n    \x3c!-- slopes --\x3e\n    <div>\n      <input repeat.for="slope of func.slopes" type="number" value.bind="slope" />\n    </div>\n  </div>\n</modal>\n\n',S=w,E=[x];let $;function C(e){$||($=a.b_N.define({name:k,template:w,dependencies:E})),e.register($)}n(1932);let O=class{constructor(){}changeSlopes(e,t){console.log("changeSlopes:"),console.log(e)}};(0,i.gn)([a.ExJ,(0,i.w6)("design:type",String)],O.prototype,"characid",void 0),(0,i.gn)([a.ExJ,(0,i.w6)("design:type",Object)],O.prototype,"eq",void 0),O=(0,i.gn)([(0,a.MoW)(s),(0,i.w6)("design:paramtypes",[])],O)},8729:(e,t,n)=>{n.r(t),n.d(t,{Statbool:()=>b});var s={};n.r(s),n.d(s,{default:()=>d,dependencies:()=>r,name:()=>o,register:()=>p,template:()=>l});var i=n(655),a=n(1542);const o="statbool",l='\x3c!-- <containerless> --\x3e\n\n\x3c!-- <tr if.bind="false">\n  <td>\n    ${characName}\n  </td>\n  <td>\n    <input type="checkbox" checked.bind="basestat.value" change.trigger="onChangeBase" />\n  </td>\n</tr> --\x3e\n\n\x3c!-- else --\x3e\n<div style="margin: 5px;">\n  <input type="checkbox" class="btn-check" id="btn-check-outlined ${basestat.statId}" autocomplete="off" checked.bind="basestat.value" change.trigger="onChangeBase">\n  <label class="btn btn-outline shadow-none" for="btn-check-outlined ${basestat.statId}">${characName}</label><br>\n</div>\n',d=l,r=[];let c;function p(e){c||(c=a.b_N.define({name:o,template:l,dependencies:r})),e.register(c)}var h=n(9344),m=n(2052);n(1932);let b=class{constructor(e){this.ea=e}onChangeBase(){this.ea.publish("stat:base:change",this.basestat)}binding(){}get characName(){return m.Mt.getCharac(this.basestat.statId).baseName}};(0,i.gn)([a.ExJ,(0,i.w6)("design:type",Object)],b.prototype,"basestat",void 0),b=(0,i.gn)([(0,a.MoW)(s),(0,h.f3)(h.Rp),a.r7y,(0,i.w6)("design:paramtypes",[Object])],b)},7694:(e,t,n)=>{n.r(t),n.d(t,{Statsimple:()=>f});var s={};n.r(s),n.d(s,{default:()=>r,dependencies:()=>c,name:()=>l,register:()=>h,template:()=>d});var i=n(655),a=n(1542),o=n(1817);const l="statsimple",d='\n<tr>\n  <td>\n    ${characName} ${basestats.entityUid}\n  </td>\n  <td>\n    <input type="number" value.bind="basestat.value" change.trigger="onChangeBase" />\n  </td>\n  <td if.bind="growthequation">\n    \x3c!-- <input type="number" value.bind="growthstat.value" change.trigger="onChangGrowth" /> --\x3e\n    <equation characid.bind="basestats.statId" eq.bind="growthequation"></equation>\n  </td>\n</tr>\n',r=d,c=[o];let p;function h(e){p||(p=a.b_N.define({name:l,template:d,dependencies:c})),e.register(p)}var m=n(9344),b=n(2052);n(1932);let f=class{constructor(e){this.ea=e}onChangeBase(){this.ea.publish("stat:base:change",this.basestat)}onChangGrowth(){this.ea.publish("stat:growth:change",this.growthequation)}binding(){}get characName(){return b.Mt.getCharac(this.basestat.statId).baseName}};(0,i.gn)([a.ExJ,(0,i.w6)("design:type",Object)],f.prototype,"basestat",void 0),(0,i.gn)([a.ExJ,(0,i.w6)("design:type",Object)],f.prototype,"growthequation",void 0),f=(0,i.gn)([(0,a.MoW)(s),(0,m.f3)(m.Rp),a.r7y,(0,i.w6)("design:paramtypes",[Object])],f)},842:(e,t,n)=>{n.r(t),n.d(t,{Tablebool:()=>I});var s={};n.r(s),n.d(s,{default:()=>E,dependencies:()=>$,name:()=>w,register:()=>O,template:()=>S});var i=n(655),a=n(1542),o=n(3379),l=n.n(o),d=n(7795),r=n.n(d),c=n(569),p=n.n(c),h=n(3565),m=n.n(h),b=n(9216),f=n.n(b),g=n(4589),u=n.n(g),v=n(1580),y={};y.styleTagTransform=u(),y.setAttributes=m(),y.insert=p().bind(null,"head"),y.domAPI=r(),y.insertStyleElement=f(),l()(v.Z,y),v.Z&&v.Z.locals&&v.Z.locals;var x=n(8729),k=n(1817);const w="tablebool",S='\n\n\n<div style="display: flex; flex-wrap: wrap;">\n  <statbool repeat.for="charac of characs" basestat.bind="getBaseStat(charac.id)"></statbool>\n</div>\n\n\n<div>\n  <equation repeat.for="charac of characs" characid.bind="charac" eq.bind="getGrowthEquation(charac.id)"></equation>\n</div>\n',E=S,$=[x,k];let C;function O(e){C||(C=a.b_N.define({name:w,template:S,dependencies:$})),e.register(C)}var j=n(9344),T=n(2052);n(1932);let I=class{constructor(e){this.ea=e}bound(){}getBaseStat(e){var t,n;return(null===(n=null===(t=this.base)||void 0===t?void 0:t.dic)||void 0===n?void 0:n.hasOwnProperty(e))?this.base.dic[e]:{statId:e,value:!1}}getGrowthEquation(e){var t,n;return(null===(n=null===(t=this.base)||void 0===t?void 0:t.growth)||void 0===n?void 0:n.hasOwnProperty(e))?this.base.growth[e]:{functions:[{xFromIncluded:T.gT.MAX_INT,xToExcluded:T.gT.MIN_INT,slopes:[0]}]}}};(0,i.gn)([a.ExJ,(0,i.w6)("design:type",Array)],I.prototype,"characs",void 0),(0,i.gn)([a.ExJ,(0,i.w6)("design:type",Object)],I.prototype,"base",void 0),I=(0,i.gn)([(0,a.MoW)(s),(0,j.f3)(j.Rp),(0,i.w6)("design:paramtypes",[Object])],I)},5587:(e,t,n)=>{n.r(t),n.d(t,{Tablesimple:()=>T});var s={};n.r(s),n.d(s,{default:()=>S,dependencies:()=>E,name:()=>k,register:()=>C,template:()=>w});var i=n(655),a=n(1542),o=n(3379),l=n.n(o),d=n(7795),r=n.n(d),c=n(569),p=n.n(c),h=n(3565),m=n.n(h),b=n(9216),f=n.n(b),g=n(4589),u=n.n(g),v=n(651),y={};y.styleTagTransform=u(),y.setAttributes=m(),y.insert=p().bind(null,"head"),y.domAPI=r(),y.insertStyleElement=f(),l()(v.Z,y),v.Z&&v.Z.locals&&v.Z.locals;var x=n(7694);const k="tablesimple",w='\n\n<table class="table-striped table-sm table-borderless table-responsive-sm" if.bind="base">\n  <thead if.bind="hasheader">\n    <tr>\n      <th></th>\n      <th>Base</th>\n      <th>Growth</th>\n       \x3c!-- if.bind="growth" --\x3e\n    </tr>\n  </thead>\n  <tbody>\n    <tr as-element="statsimple" repeat.for="charac of characs" basestat.bind="getBaseStat(charac.id)" growthequation.bind="getGrowthEquation(charac.id)"></tr>\n  </tbody>\n</table>\n',S=w,E=[x];let $;function C(e){$||($=a.b_N.define({name:k,template:w,dependencies:E})),e.register($)}var O=n(9344),j=n(2052);n(1932);let T=class{constructor(e){this.ea=e,this.hasheader=!0,this.base=null}bound(){}getBaseStat(e){var t,n;return(null===(n=null===(t=this.base)||void 0===t?void 0:t.dic)||void 0===n?void 0:n.hasOwnProperty(e))?this.base.dic[e]:{statId:e,value:0}}getGrowthEquation(e){var t,n;return(null===(n=null===(t=this.base)||void 0===t?void 0:t.growth)||void 0===n?void 0:n.hasOwnProperty(e))?this.base.growth[e]:{functions:[{xFromIncluded:j.gT.MAX_INT,xToExcluded:j.gT.MIN_INT,slopes:[0]}]}}};(0,i.gn)([a.ExJ,(0,i.w6)("design:type",Boolean)],T.prototype,"hasheader",void 0),(0,i.gn)([a.ExJ,(0,i.w6)("design:type",Array)],T.prototype,"characs",void 0),(0,i.gn)([a.ExJ,(0,i.w6)("design:type",Object)],T.prototype,"base",void 0),T=(0,i.gn)([(0,a.MoW)(s),(0,O.f3)(O.Rp),(0,i.w6)("design:paramtypes",[Object])],T)}}]);